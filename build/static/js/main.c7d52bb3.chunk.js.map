{"version":3,"sources":["themes/theme.js","components/MathsLearningComponents.js","components/InputComponents.js","components/AlertComponents.js","components/HeadingComponents.js","components/QuestionComponents.js","components/StageComponents.js","questions/Questions.js","functions/HCFFunctions.js","themes/styles.js","pages/HCFFactorization.js","functions/LCMFunctions.js","pages/LCMMultiplication.js","functions/HCFPrimeFunctions.js","functions/PrimeNumbersFunctions.js","pages/HCFPrimeFactorization.js","pages/LCMPrimeFactorization.js","functions/LCMPrimeFunctions.js","pages/HCFDivision.js","pages/LCMDivision.js","constants/MathsLearningConstants.js","assets/cross1.png","assets/cross2.jpg","assets/zacchaeus1.jpg","assets/prayer1.jpg","pages/MathsLearning.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","h1","palette","color","myBlack","myBlue","myGreen","myOrange","myYellow","myBrown","myPink","myWhite","red","orange","yellow","lime","green","cyan","blue","purple","skyGradient","conicGradient","headingSelectStyles","makeStyles","headingSelectRow","direction","display","padding","paddingBottom","selectLabel","myTheme","breakpoints","down","selectText","height","selectWidth","width","selectIcon","HeadingSelect","selectIndex","setItemIndex","itemsArray","classes","Grid","className","InputLabel","Select","variant","inputProps","icon","value","onChange","e","event","target","handleSelect","map","language","index","MenuItem","myInputStyles","myInputText","margin","textAlign","MyInput","setInputValue","focusedIndex","inputsArray","setFocusedIndex","clickable","groupType","handleChange","highlighted","bgColor","style","backgroundColor","placeholder","step","max","min","type","disabled","onClick","alertSnackbarStyles","alert","Alert","props","elevation","AlertSnackbar","open","closeAlert","errorMessage","severity","Snackbar","autoHideDuration","onClose","myFrameStyles","frame","centerRow","justifyContent","topic","learningTool","MyFrame","children","otherProps","Typography","myQuestionStyles","alignItems","commonText","okButton","MyQuestion","questionTextLeft","setInputIntegersArray","inputIntegerFocusedIndex","inputIntegersArray","setInputIntegerFocusedIndex","questionTextRight","okClick","input","length","Button","stageButtonsStyles","createStyles","verticalCenterRow","stageText","StageButtons","stages","handleStageClick","stageState","manual","linesOfStages","push","container","line","lineIndex","ButtonGroup","size","aria-label","stage","parseInt","questions","calculateFactors","getInteger","i","factorsArray","pagesStyles","divisionColomn","divisionInsideColumn","divisionInsideWideColumn","divisionRow","spaceGrid","factorsRows","multiplesRows","completeButton","HCFFactorization","languageIndex","useState","openAlert","setOpenAlert","setErrorMessage","showFactorRows","setShowFactorRows","firstFactorsArray","setFirstFactorsArray","secondFactorsArray","setSecondFactorsArray","firstInputsArray","setFirstInputsArray","secondInputsArray","setSecondInputsArray","firstArrayFocusedIndex","setFirstArrayFocusedIndex","secondArrayFocusedIndex","setSecondArrayFocusedIndex","numberOfArraysCorrect","setNumberOfArraysCorrect","showResult","setShowResult","setSeverity","commonFactorsArray","setCommonFactorsArray","commonInputsArray","setCommonInputsArray","commonArrayFocusedIndex","setCommonArrayFocusedIndex","hcfResultArray","setHcfResultArray","hcfInputArray","setHcfInputArray","hcfArrayFocusedIndex","setHcfArrayFocusedIndex","wholeCompleted","setWholeCompleted","order","stageOrder","setStageOrder","timeDelay","mustBeIntegerMessages","mustBeInRangeMessage","mustBeDifferentMessage","factorTextLeft","factorTextRight","commonFactorHint","hcfHint","tryText","factorsCorrectTextLeft","factorsCorrectTextRight","commonFactorsCorrectText","hcfCorrectText","useEffect","setQuestion","tmpArray","checkAnswer","setAnswerFocusedIndex","setTimeout","Math","round","numberOfArrays","tryInteger","tryIntegerString","factorsArray0","getFirstFactorsArray","getSecondFactorsArray","forEach","factor","includes","calculateResults","Object","keys","Paper","resetArrow","calculateMultiples","getInteger1","getInteger2","multiplesArray","lcm","LCMMultiplication","showMultipleRows","setShowMultipleRows","firstMultiplesArray","setFirstMultiplesArray","secondMultiplesArray","setSecondMultiplesArray","commonMultiplesArray","setCommonMultiplesArray","lcmResultArray","setLcmResultArray","lcmInputArray","setLcmInputArray","lcmArrayFocusedIndex","setLcmArrayFocusedIndex","multipleTextLeft","multipleTextRight","commonMultipleHint","lcmHint","multiplesCorrectTextLeft","multiplesCorrectTextRight","commonMultiplesCorrectText","lcmCorrectText","multiplesArray0","getFirstMultiplesArray","getSecondMultiplesArray","multiple","primeNumbers","tmpInteger","j","tmpSecondFactorsArray","indexOf","getPrimeNumbers","tmpPrimeNumbersArray","isPrime","HCFPrimeFactorization","showDivisionColomns","setShowDivisionColomns","firstDivisorsArray","setFirstDivisorsArray","firstQuotientsArray","setFirstQuotientsArray","secondDivisorsArray","setSecondDivisorsArray","secondQuotientsArray","setSecondQuotientsArray","firstDivisorFocusedIndex","setFirstDivisorFocusedIndex","secondDivisorFocusedIndex","setSecondDivisorFocusedIndex","firstQuotientFocusedIndex","setFirstQuotientFocusedIndex","secondQuotientFocusedIndex","setSecondQuotientFocusedIndex","firstDivisionCompleted","setFirstDivisionCompleted","secondDivisionCompleted","setSecondDivisionCompleted","showFactorsColomns","setShowFactorsColomns","setPrimeNumbers","mustBeAPrimeText","mustBeAFactorTextLeft","mustBeAFactorTextRight","quotientIsAPrimeQuestionLeft","quotientIsAPrimeQuestionRight","completeButtonText","divisionCompletedText","divisionIncompleteHint","primeFactorHint","hcfOneHint","checkDivisor","checkQuotient","quotient","divisorsArray","quotientsArray","setDivisorsArray","setQuotientsArray","divisorIndex","tmpDivisorsArray","tmpQuotientsArray","inputInteger","completeClick","setDivisionCompleted","anotherDivisionCompleted","tmpHcf","divisor","Box","border","borderBottom","borderLeft","LCMPrimeFactorization","firstArrayIndex","secondArrayIndex","tmpLcm","HCFDivision","divisorFocusedIndex","setDivisorFocusedIndex","numberOfQuotientCorrect","setNumberOfQuotientCorrect","divisionCompleted","firstQuotient","secondQuotient","anotherQuotientsArray","setAnotherQuotientsArray","setAnotherQuotientFocusedIndex","tmpAnotherQuotientsArray","okReset","LCMDivision","tmpFactorsArray","tmpInputsArray","pop","sort","a","b","constants","languages","bibleVersions","bibleVersionsQuestion","topics","topicsQuestion","learningTools","learningToolsQuestion","scriptureVerses","prayers","noticificationText","applicationHint","withStyles","mathsLearningContainer","minHeight","backgroundImage","headingContainer","scriptureVerseRow","scriptureVerseBorder","borderWidth","borderImage","scriptureImage","scriptureVerse","prayerRow","prayerImage","prayerText","emailText","setLanguageIndex","bibleVersionIndex","setBibleVersionIndex","topicIndex","setTopicIndex","learningToolIndex","setLearningToolIndex","scriptureVerseIndex","setScriptureVerseIndex","scriptureImages","pic1","pic2","pic3","queryString","location","search","urlParams","URLSearchParams","get","floor","random","spacing","slice","src","renderSwitch","emailRow","App","path","component","MathsLearning","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7d52bb3.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Roboto\"',\n    fontSize: 30,\n    h1: {\n      // could customize the h1 variant as well\n    }\n  },\n  palette: {\n    //primary: { main: \"#DF1B1B\" }\n  },\n  color: {\n    myBlack: \"#111111\",\n    myBlue: \"#0044AA\",\n    myGreen: \"#00BB00\",\n    myOrange: \"#DD8800\",\n    myYellow: \"#FFDF44\",\n    myBrown: \"#BB6611\",\n    myPink: \"#FF9999\",\n    myWhite: \"#F0FFFA\",\n    red: \"#FF4444\",\n    orange: \"#FF8400\",\n    yellow: \"#F0E900\",\n    lime: \"#B0FF33\",\n    green: \"#55FF77\",\n    cyan: \"#22EEFF\",\n    blue: \"#0088FF\",\n    purple: \"#B400FF\",\n    skyGradient: \"linear-gradient(to top, #AFF0FF, #EFFFFF)\",\n    conicGradient: \"linear-gradient(to top right, aqua, blue, magenta, red, orange) 1\",\n  },\n});\n","import React from \"react\";\nimport {\n  Grid,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { theme as myTheme } from \"../themes/theme\";\n\nconst headingSelectStyles = makeStyles((theme) => ({\n  headingSelectRow: {\n    direction: \"row\",\n    display: \"flex\",\n    padding: \"0.5vw\",\n    paddingBottom: \"1.4vh\",\n  },\n  selectLabel: {\n    fontSize: \"1.8vw\",\n    color: myTheme.color.myBlack,\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"3.6vw\",\n    },\n  },\n  selectText: {\n    fontSize: \"1.4vw\",\n    color: myTheme.color.myBlue,\n    height: \"2vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"2.8vw\",\n      height: \"4vw\",\n    },\n  },\n  selectWidth: {\n    width: \"12vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"24vw\",\n    },\n  },\n  selectIcon: {\n    fontSize: \"2vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"4vw\",\n    },\n  },\n}));\n\nexport const HeadingSelect = ({ selectLabel, selectIndex, setItemIndex, itemsArray }) => {\n  const handleSelect = (event, setItemIndex) => {\n    setItemIndex(event.target.value);\n  };\n\n  const classes = headingSelectStyles();\n\n  return (\n    <Grid className={classes.headingSelectRow}>\n      <InputLabel className={classes.selectLabel}>{selectLabel}:</InputLabel>\n      <Select\n        variant=\"outlined\"\n        className={`${classes.selectText} ${classes.selectWidth}`}\n        inputProps={{\n          classes: {\n            icon: classes.selectIcon,\n          },\n        }}\n        value={selectIndex}\n        onChange={e => { handleSelect(e, setItemIndex) }}\n      >\n        {\n          itemsArray.map((language, index) => {\n            return <MenuItem key={index} className={classes.selectText} value={index}>{language}</MenuItem>\n          })\n        }\n      </Select>\n    </Grid>\n  )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { theme as myTheme } from \"../themes/theme\";\n\nconst myInputStyles = makeStyles((theme) => ({\n  myInputText: {\n    width: \"6vw\",\n    height: \"2.4vw\",\n    fontSize: \"2vw\",\n    margin: \"0.5vw\",\n    textAlign: \"right\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"12vw\",\n      height: \"4.8vw\",\n      fontSize: \"4vw\",\n    },\n  },\n}));\n\nexport const MyInput = ({ index, setInputValue, focusedIndex, inputsArray, setFocusedIndex, clickable, groupType, handleChange, highlighted }) => {\n\n  const inputClick = (e) => {\n    if (clickable) {\n      setFocusedIndex(index);\n    }\n  }\n\n  const classes = myInputStyles();\n  var bgColor = highlighted? myTheme.color.myYellow: (index == focusedIndex) ? myTheme.color.myPink : myTheme.color.myWhite;\n\n  return (\n      <input\n        className={classes.myInputText}\n        style={{ backgroundColor: bgColor }}\n        placeholder={(groupType == \"inputInteger\")? \"1~99\": \"\"}\n        value={inputsArray[index] == 0? \"\": inputsArray[index]}\n        step=\"1\"\n        max=\"999\"\n        min=\"1\"\n        type=\"number\"\n        disabled={(index == focusedIndex || clickable) ? \"\" : \"disabled\"}\n        onClick={e => { inputClick(e) }}\n        onChange={e => { handleChange(e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) }}\n      />\n  )\n}\n\n","import React from \"react\";\nimport {\n  Snackbar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { theme as myTheme } from \"../themes/theme\";\n\nconst alertSnackbarStyles = makeStyles((theme) => ({\n  alert: {\n    fontSize: \"2vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"4vw\",\n    },\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport const AlertSnackbar = ({ open, closeAlert, errorMessage, severity }) => {\n  const classes = alertSnackbarStyles();\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={4000}\n      onClose={closeAlert}\n    >\n      <Alert\n        className={classes.alert}\n        onClose={closeAlert}\n        severity={severity}\n      >\n        <div>{errorMessage}</div>\n      </Alert>\n    </Snackbar>\n  );\n};","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { theme as myTheme } from \"../themes/theme\";\n\nconst myFrameStyles = makeStyles((theme) => ({\n  frame: {\n\n  },\n  centerRow: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  topic: {\n    fontSize: \"2.4vw\",\n    color: myTheme.color.myOrange,\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"4.8vw\",\n      textAlign: \"center\",\n    },\n  },\n  learningTool: {\n    fontSize: \"1.6vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"3.2vw\",\n    },\n  },\n}));\n\nexport const MyFrame = (props) => {\n  const classes = myFrameStyles();\n  const { children, topic, learningTool, ...otherProps } = props; \n\n  return (\n    <Grid className={classes.frame} {...otherProps}>\n      <Grid className={classes.centerRow}>\n        <Typography className={classes.topic}>{topic}</Typography>\n      </Grid>\n      <Grid className={classes.centerRow}>\n        <Typography className={classes.learningTool}>{learningTool}</Typography>\n      </Grid>\n      {children}\n    </Grid>\n  )\n}","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { MyInput } from \"./InputComponents\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { theme as myTheme } from \"../themes/theme\";\n\nconst myQuestionStyles = makeStyles((theme) => ({\n  centerRow: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      alignItems: 'flex-end',\n    },\n  },\n  commonText: {\n    fontSize: \"2vw\",\n    margin: '0.5vw',\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"4vw\",\n      textAlign: \"center\",\n    },\n  },\n  okButton: {\n    height: \"3vw\",\n    width: \"6vw\",\n    fontSize: \"2vw\",\n    margin: \"0.5vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"6vw\",\n      width: \"12vw\",      \n      fontSize: \"4vw\",\n    },\n  },\n}));\n\nexport const MyQuestion = (props) => {\n  const classes = myQuestionStyles();\n  const { \n    questionTextLeft,\n    setInputIntegersArray,\n    inputIntegerFocusedIndex,\n    inputIntegersArray,\n    setInputIntegerFocusedIndex,\n    handleChange,\n    questionTextRight,\n    okClick\n   } = props; \n\n  return (\n    <Grid className={classes.centerRow}>\n        <Typography className={classes.commonText}>{questionTextLeft}</Typography>\n        {\n          inputIntegersArray.map((input, index) => {\n            return <Grid key={index} style={{display: \"flex\"}}>\n              <MyInput\n                index={index}\n                setInputValue={setInputIntegersArray}\n                focusedIndex={inputIntegerFocusedIndex}\n                inputsArray={inputIntegersArray}\n                clickable={true}\n                setFocusedIndex={setInputIntegerFocusedIndex}\n                groupType=\"inputInteger\"\n                handleChange={handleChange}\n              />\n              {(inputIntegersArray.length - 1 > index) && <Typography className={classes.commonText}>,</Typography>}\n            </Grid>\n          })\n        }\n        <Typography className={classes.commonText}>{questionTextRight}</Typography>\n        <Button\n          className={classes.okButton}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={okClick}\n        >OK</Button>\n      </Grid>\n  )\n}","import React from \"react\";\nimport { ButtonGroup, Button, Grid, Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { theme as myTheme } from \"../themes/theme\";\nconst stageButtonsStyles = makeStyles(() =>\n  createStyles({\n    centerRow: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    verticalCenterRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    stageText: {\n      fontSize: 20,\n      color: myTheme.color.myBlue,\n    },\n  })\n);\n\nexport const StageButtons = ({\n  stageText,\n  stages,\n  handleStageClick,\n  stageState,\n  manual,\n}) => {\n  const classes = stageButtonsStyles();\n  const buttonsInLine = 7;\n  let linesOfStages = [0];\n  if (stages.length > buttonsInLine) {\n    linesOfStages.push(1);\n  }\n  return (\n    <Grid>\n      <Grid\n        container\n        className={`${classes.centerRow} ${classes.verticalCenterRow}`}\n      >\n        <Typography className={classes.stageText}>{stageText}</Typography>\n        {linesOfStages.map((line, lineIndex) => {\n          return <ButtonGroup key={line} size=\"small\" color=\"primary\" aria-label=\"outlined primary button group\">\n          {stages.map((stage, index) => {\n            let color =\n              stageState === parseInt(stage) ? \"secondary\" : \"primary\";\n            let bgColor =\n              stageState === parseInt(stage) ? myTheme.color.myYellow : \"\";\n            return (\n              index >= line * buttonsInLine && index < (line + 1) * buttonsInLine && <Button\n                key={parseInt(stage)}\n                color={color}\n                style={{ backgroundColor: bgColor }}\n                onClick={() => handleStageClick(parseInt(stage))}\n              >\n                {parseInt(stage) + 1}\n              </Button>\n            );\n          })}\n        </ButtonGroup>\n        })}\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          color={stageState === -1 ? \"secondary\" : \"primary\"}\n          style={{\n            backgroundColor: stageState === -1 ? myTheme.color.myYellow : \"\",\n          }}\n          onClick={() => handleStageClick(-1)}\n        >\n          {manual}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n","const questions = [\n  //stage 0 one common prime factor\n  [\n    [4, 6],\n    [25, 10],\n    [9, 15],\n  ],\n  //stage 1 two common prime factors\n  [\n    [12, 18],\n    [50, 40],\n    [54, 45],\n  ],\n  //stage 2 three common prime factors\n  [\n    [24, 36],\n    [32, 40],\n    [60, 80],\n  ],\n  //stage 3 one of them is one\n  [\n    [1, 8],\n    [17, 1],\n    [1, 24],\n  ],\n  //stage 4 one is the factor of another one\n  [\n    [7, 21],\n    [5, 45],\n    [4, 44],\n  ],\n  //stage 5 relative prime to each other\n  [\n    [2, 5],\n    [3, 4],\n    [4, 7],\n  ],\n\n];\n\nexport default questions;\n","export function calculateFactors(getInteger) {\n  var factorsArray = [];\n  var inputsArray = [];\n  var i;\n  for (i = 1; i * i <= getInteger; i++) {\n    if (getInteger % i == 0) {\n      factorsArray.push(i);\n      inputsArray.push(null);\n    }\n  }\n  for (i = factorsArray.length - 1; i >= 0; i--) {\n    if (getInteger != factorsArray[i] ** 2) {\n      factorsArray.push(getInteger / factorsArray[i]);\n      inputsArray.push(null);\n    }\n  }\n  return { factorsArray, inputsArray };\n}\n\nexport function calculateResults(getFirstFactorsArray, getSecondFactorsArray) {\n  var factorsArray = [];\n  var inputsArray = [];\n  getFirstFactorsArray.forEach(factor => {\n    if (getSecondFactorsArray.includes(factor)) {\n      factorsArray.push(factor);\n      inputsArray.push(null);\n    }\n  });\n  return { factorsArray, inputsArray };\n}","import { makeStyles} from \"@material-ui/core/styles\";\n\nexport const pagesStyles = makeStyles((theme) => ({\n  centerRow: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  commonText: {\n    fontSize: \"2vw\",\n    margin: '0.5vw',\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"4vw\",\n    },\n  },\n  divisionColomn: {\n    margin: \"2vw\",\n  },\n  divisionInsideColumn: {\n    width: \"30vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"50vw\",\n    },\n  },\n  divisionInsideWideColumn: {\n    width: \"40vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"60vw\",\n    },\n  },\n  divisionRow: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  spaceGrid: {\n    height: \"2vw\",\n  },\n  factorsRows: {\n    width: \"80vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95vw\",\n    },\n  },\n  multiplesRows: {\n    width: \"80vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95vw\",\n    },\n  },\n/*  okButton: {\n    height: \"3vw\",\n    width: \"6vw\",\n    fontSize: \"2vw\",\n    margin: \"0.5vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"6vw\",\n      width: \"12vw\",\n      fontSize: \"4vw\",\n    },\n  },*/\n  completeButton: {\n    height: \"3vw\",\n    width: \"7vw\",\n    fontSize: \"1vw\",\n    margin: \"0.5vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"6vw\",\n      width: \"14vw\",\n      fontSize: \"2vw\",\n    },\n  },\n}));","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { MyInput } from \"../components/InputComponents\";\nimport { AlertSnackbar } from \"../components/AlertComponents\";\nimport { MyFrame } from \"../components/HeadingComponents\";\nimport { MyQuestion } from \"../components/QuestionComponents\";\nimport { StageButtons } from \"../components/StageComponents\";\nimport questions from \"../questions/Questions\";\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport { calculateFactors, calculateResults } from \"../functions/HCFFunctions\";\nimport { pagesStyles } from \"../themes/styles\";\n\n//×÷👍👍🏻\nexport const HCFFactorization = ({ languageIndex, topic, learningTool }) => {\n  const [inputIntegersArray, setInputIntegersArray] = useState([null, null]);\n  const [inputIntegerFocusedIndex, setInputIntegerFocusedIndex] = useState(0);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showFactorRows, setShowFactorRows] = useState(false);\n  const [firstFactorsArray, setFirstFactorsArray] = useState([]);\n  const [secondFactorsArray, setSecondFactorsArray] = useState([]);\n  const [firstInputsArray, setFirstInputsArray] = useState([]);\n  const [secondInputsArray, setSecondInputsArray] = useState([]);\n  const [firstArrayFocusedIndex, setFirstArrayFocusedIndex] = useState(0);\n  const [secondArrayFocusedIndex, setSecondArrayFocusedIndex] = useState(0);\n  const [numberOfArraysCorrect, setNumberOfArraysCorrect] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [severity, setSeverity] = useState(\"error\");\n  const numberOfArrays = 2;\n  const [commonFactorsArray, setCommonFactorsArray] = useState([]);\n  const [commonInputsArray, setCommonInputsArray] = useState([]);\n  const [commonArrayFocusedIndex, setCommonArrayFocusedIndex] = useState(0);\n  const [hcfResultArray, setHcfResultArray] = useState([null]);\n  const [hcfInputArray, setHcfInputArray] = useState([null]);\n  const [hcfArrayFocusedIndex, setHcfArrayFocusedIndex] = useState(0);\n  const [wholeCompleted, setWholeCompleted] = useState(false);\n  const [stageOrder, setStageOrder] = useState({ stage: 0, order: 0 });\n  const timeDelay = 200;\n\n  const stageText = [\"階段\", \"阶段\", \"Stage\", \"Étape\"];\n  const manual = [\"自擬題目\", \"自拟题目\", \"Personal Task\", \"Tâche personnelle\"];\n\n  const mustBeIntegerMessages = [\n    \"輸入的數必須是整數。\",\n    \"输入的数必须是整数。\",\n    \"The inputted numbers should be integers.\",\n    \"Les nombres entrés doivent être des entiers.\"\n  ];\n\n  const mustBeInRangeMessage = [\n    \"輸入的數必須在1至99以內。\",\n    \"输入的数必须在1至99以内。\",\n    \"The inputted numbers should be in the range of 1 and 99.\",\n    \"Les nombres saisis doivent être compris entre 1 et 99.\"\n  ];\n\n  const mustBeDifferentMessage = [\n    \"兩數必須不相同。\",\n    \"两数必须不相同。\",\n    \"The two integers should not be the same.\",\n    \"Les deux nombres entiers ne devraient pas être identiques.\"\n  ];\n\n  const questionTextLeft = [\n    \"\", \"\", \"H.C.F./G.C.F.(Highest/Greatest Common Factor) of \", \"H.C.F./G.C.F.(Facteur commun le plus élevé / le plus grand) sur \"\n  ];\n\n  const questionTextRight = [\n    \"的H.C.F./G.C.F.(最大公因數)\", \"的H.C.F./G.C.F.(最大公因数)\", \"\", \"\"\n  ];\n\n  const factorTextLeft = [\n    \"\", \"\", \"Factors of \", \"Facteurs de \"\n  ];\n\n  const factorTextRight = [\n    \"的因數\", \"的因数\", \"\", \"\"\n  ];\n\n  const commonFactorTextLeft = [\n    \"\", \"\", \"Common factors of \", \"Facteurs communs de \"\n  ];\n\n  const commonFactorTextRight = [\n    \"的公因數\", \"的公因数\", \"\", \"\"\n  ];\n\n  const commonFactorHint = [\n    \"由小至大找出相同的因數。\",\n    \"由小至大找出相同的因数。\",\n    \"Find the common factors from small to large.\",\n    \"Trouvez les facteurs communs de petit à grand.\"\n  ];\n\n  const hcfHint = [\n    \"在上行的公因數中找出最大的一個。\",\n    \"在上行的公因数中找出最大的一个。\",\n    \"Find the largest one among the common factors.\",\n    \"Trouvez le plus grand parmi les facteurs communs.\"\n  ];\n\n  const tryText = [\n    \"嘗試 \", \"尝试 \", \"Try \", \"Essayer \"\n  ];\n\n  const factorsCorrectTextLeft = [\n    \"你成功列出\", \"你成功列出\", \"You successfully listed the factors of \", \"Vous avez répertorié avec succès les facteurs de \"\n  ];\n\n  const factorsCorrectTextRight = [\n    \"的因數。\", \"的因数。\", \".\", \".\"\n  ];\n\n  const commonFactorsCorrectText = [\n    \"你成功列出所有公因數。\",\n    \"你成功列出所有公因数。\",\n    \"You successfully list all common factors.\",\n    \"Vous avez réussi à répertorier tous les facteurs communs.\"\n  ];\n\n  const hcfCorrectText = [\n    \"做得好!你求得正確的H.C.F.。\",\n    \"做得好!你求得正确的H.C.F.。\",\n    \"Well done! You got the right H.C.F..\",\n    \"Bien joué! Vous avez le bon H.C.F..\"\n  ];\n\n  useEffect(() => {\n    if (questions.length === 0) {\n      if (stageOrder === { stage: -1, order: 0 }) {\n        setInputIntegersArray([null, null]);\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      if (stageOrder === { stage: 0, order: 0 }) {\n        setQuestion(stageOrder.stage, stageOrder.order);\n      } else {\n        setStageOrder({ stage: 0, order: 0 });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowFactorRows(false);\n    setShowResult(false);\n    if (stageOrder.stage > -1) {\n      setQuestion(stageOrder.stage, stageOrder.order);\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }, [stageOrder]);\n\n  const handleStageClick = (stage) => {\n    setStageOrder({ stage: stage, order: 0 });\n  };\n\n  const setQuestion = (\n    stage,\n    order\n  ) => {\n    setInputIntegersArray(questions[stage][order])\n  };\n\n  useEffect(() => {\n    if (stageOrder.stage > -1 && inputIntegersArray[1] != null) {\n      okClick();\n    }\n  }, [inputIntegersArray])\n\n  function nextClick() {\n    if (stageOrder.stage > -1) {\n      if (\n        stageOrder.order <\n        questions[stageOrder.stage].length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage, order: stageOrder.order + 1 });\n      } else if (\n        stageOrder.stage <\n        questions.length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage + 1, order: 0 });\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }\n\n  const closeAlert = (e) => {\n    setOpenAlert(false);\n  };\n\n  const handleChange = (e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) => {\n    setOpenAlert(false);\n    if (focusedIndex == index || clickable) {\n      var tmpArray = [...inputsArray];\n      tmpArray[index] = parseInt(e.target.value);\n      setInputValue(tmpArray);\n      switch (groupType) {\n        case \"inputInteger\":\n          setShowFactorRows(false);\n          setShowResult(false);\n          break;\n        case \"firstFactor\":\n          checkAnswer(index, e.target.value, firstFactorsArray, setFirstArrayFocusedIndex);\n          break;\n        case \"secondFactor\":\n          checkAnswer(index, e.target.value, secondFactorsArray, setSecondArrayFocusedIndex);\n          break;\n        case \"commonFactor\":\n          checkAnswer(index, e.target.value, commonFactorsArray, setCommonArrayFocusedIndex, groupType);\n          break;\n        case \"hcf\":\n          checkAnswer(index, e.target.value, hcfResultArray, setHcfArrayFocusedIndex, groupType);\n          break;\n\n      }\n    }\n  };\n\n  function checkAnswer(index, value, factorsArray, setAnswerFocusedIndex, groupType) {\n    if (value == factorsArray[index]) {\n      if (groupType == \"hcf\") {\n        setErrorMessage(\"👍🏻\" + hcfCorrectText[languageIndex]);\n        setWholeCompleted(true);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n      } else if (groupType == \"commonFactor\") {\n        if (index == factorsArray.length - 1) {\n          setErrorMessage(\"👍🏻\" + commonFactorsCorrectText[languageIndex]);\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"success\");\n          setAnswerFocusedIndex(-1);\n        } else {\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }\n      } else if (index == Math.round((factorsArray.length - 1) / 2)) {\n        setErrorMessage(\"👍🏻\" + factorsCorrectTextLeft[languageIndex] + factorsArray[factorsArray.length - 1] + factorsCorrectTextRight[languageIndex]);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n        if (numberOfArraysCorrect == numberOfArrays - 1) {\n          setShowResult(true);\n        } else {\n          setNumberOfArraysCorrect(numberOfArraysCorrect + 1);\n        }\n      } else {\n        setTimeout(() => {\n          setOpenAlert(false);\n        }, timeDelay);\n        if (index < Math.round((factorsArray.length - 1) / 2)) {\n          setAnswerFocusedIndex(factorsArray.length - index - 1);\n        } else if (index > Math.round((factorsArray.length - 1) / 2)) {\n          setAnswerFocusedIndex(factorsArray.length - index);\n        }\n      }\n    } else {\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        if (groupType == \"hcf\") {\n          setErrorMessage(hcfHint[languageIndex]);\n        } else if (groupType == \"commonFactor\") {\n          setErrorMessage(commonFactorHint[languageIndex]);\n        } else if (index < Math.round((factorsArray.length - 1) / 2)) {\n          var tryInteger = index == 0 ? 0 : factorsArray[index - 1];\n          var tryIntegerString = (tryInteger + 1) + \", \" + (tryInteger + 2) + \", \" + (tryInteger + 3) + \",... ×?=\" + factorsArray[factorsArray.length - 1];\n          setErrorMessage(tryText[languageIndex] + tryIntegerString)\n        } else if (index > Math.round((factorsArray.length - 2) / 2)) {\n          var tryIntegerString = factorsArray[factorsArray.length - 1] + \"÷\" + factorsArray[factorsArray.length - index - 1];\n          setErrorMessage(tryText[languageIndex] + tryIntegerString);\n        } else {\n          var tryIntegerString = \"A×A=\" + factorsArray[factorsArray.length - 1] + \", A=?\";\n          setErrorMessage(tryText[languageIndex] + tryIntegerString);\n        }\n      }\n    }\n  }\n\n  const okClick = (e) => {\n    if (inputIntegersArray[0] != parseInt(inputIntegersArray[0]) || inputIntegersArray[1] != parseInt(inputIntegersArray[1])) {\n      setErrorMessage(mustBeIntegerMessages[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] < 1 || inputIntegersArray[0] > 99 || inputIntegersArray[1] < 1 || inputIntegersArray[1] > 99) {\n      setErrorMessage(mustBeInRangeMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] == inputIntegersArray[1]) {\n      setErrorMessage(mustBeDifferentMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else {\n      setOpenAlert(false);\n      setShowFactorRows(false);\n      setTimeout(() => {\n        setShowFactorRows(true);\n      }, timeDelay);\n      setFirstArrayFocusedIndex(0);\n      setSecondArrayFocusedIndex(0);\n      setNumberOfArraysCorrect(0);\n      setShowResult(false);\n      setCommonArrayFocusedIndex(0);\n      setHcfInputArray([null]);\n      setHcfArrayFocusedIndex(0);\n      setWholeCompleted(false);\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[0]);\n      setFirstFactorsArray(factorsArray);\n      setFirstInputsArray(inputsArray);\n      var factorsArray0 = factorsArray;\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[1]);\n      setSecondFactorsArray(factorsArray);\n      setSecondInputsArray(inputsArray);\n      var factorsArray1 = factorsArray;\n      var { factorsArray, inputsArray } = calculateResults(factorsArray0, factorsArray1);\n      setCommonFactorsArray(factorsArray);\n      setCommonInputsArray(inputsArray);\n      setHcfResultArray([factorsArray[factorsArray.length - 1]]);\n    }\n  };\n\n  const classes = pagesStyles();\n\n  return (\n    <MyFrame topic={topic} learningTool={learningTool}>\n      <Grid className={classes.spaceGrid} />\n      {questions.length > 0 && (\n        <StageButtons\n          stageText={stageText[languageIndex] + \"：\"}\n          stages={Object.keys(questions)}\n          handleStageClick={handleStageClick}\n          stageState={stageOrder.stage}\n          manual={manual[languageIndex]}\n        />\n      )}\n      <Grid className={classes.spaceGrid} />\n      <MyQuestion\n        questionTextLeft={questionTextLeft[languageIndex]}\n        setInputIntegersArray={setInputIntegersArray}\n        inputIntegerFocusedIndex={inputIntegerFocusedIndex}\n        inputIntegersArray={inputIntegersArray}\n        setInputIntegerFocusedIndex={setInputIntegerFocusedIndex}\n        handleChange={handleChange}\n        questionTextRight={questionTextRight[languageIndex]}\n        okClick={okClick}\n      />\n      <AlertSnackbar\n        open={openAlert}\n        closeAlert={closeAlert}\n        errorMessage={errorMessage}\n        severity={severity}\n      />\n      {\n        showFactorRows && <Grid>\n          <Grid className={classes.centerRow}>\n            <Grid container className={classes.factorsRows}>\n              <Typography className={classes.commonText}>\n                {factorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]}&nbsp;{factorTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                firstInputsArray.map((factor, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    <MyInput\n                      index={index}\n                      setInputValue={setFirstInputsArray}\n                      focusedIndex={firstArrayFocusedIndex}\n                      inputsArray={firstInputsArray}\n                      clickable={false}\n                      groupType=\"firstFactor\"\n                      handleChange={handleChange}\n                    />\n                    {(firstInputsArray.length - 1 > index) && <Typography className={classes.commonText}>,</Typography>}\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n          <Grid className={classes.centerRow}>\n            <Grid container className={classes.factorsRows}>\n              <Typography className={classes.commonText}>\n                {factorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[1]}&nbsp;{factorTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                secondInputsArray.map((factor, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    <MyInput\n                      index={index}\n                      setInputValue={setSecondInputsArray}\n                      focusedIndex={secondArrayFocusedIndex}\n                      inputsArray={secondInputsArray}\n                      clickable={false}\n                      groupType=\"secondFactor\"\n                      handleChange={handleChange}\n                    />\n                    {(secondInputsArray.length - 1 > index) && <Typography className={classes.commonText}>,</Typography>}\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showResult && <Grid >\n          <Grid className={classes.centerRow}>\n            <Grid className={classes.factorsRows}>\n              <Paper >\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {commonFactorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{commonFactorTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  {\n                    commonInputsArray.map((factor, index) => {\n                      return <Grid key={index} style={{ display: \"flex\" }}>\n                        <MyInput\n                          index={index}\n                          setInputValue={setCommonInputsArray}\n                          focusedIndex={commonArrayFocusedIndex}\n                          inputsArray={commonInputsArray}\n                          clickable={false}\n                          groupType=\"commonFactor\"\n                          handleChange={handleChange}\n                        />\n                        {(commonInputsArray.length - 1 > index) && <Typography className={classes.commonText}>,</Typography>}\n                      </Grid>\n                    })\n                  }\n                </Grid>\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {questionTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{questionTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  <MyInput\n                    index={0}\n                    setInputValue={setHcfInputArray}\n                    focusedIndex={hcfArrayFocusedIndex}\n                    inputsArray={hcfInputArray}\n                    clickable={false}\n                    groupType=\"hcf\"\n                    handleChange={handleChange}\n                  />\n                  {\n                    wholeCompleted && <Button\n                      className={classes.okButton}\n                      variant=\"contained\"\n                      onClick={nextClick}\n                      color=\"primary\"\n                    ><ForwardRoundedIcon className={classes.resetArrow} /></Button>\n                  }\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </MyFrame>\n  );\n}\n","export function calculateMultiples(getInteger1, getInteger2) {\n  var multiplesArray = [];\n  var inputsArray = [];\n  var lcm = 0;\n  var i;\n  for (i = 1; i <= 100; i++) {\n    if (lcm != 0 && (getInteger1 * i > lcm * 3 || i > 15)) {\n      return { multiplesArray, inputsArray };\n    } else {\n      multiplesArray.push(getInteger1 * i);\n      inputsArray.push(null);\n      if (getInteger1 * i % getInteger2 == 0 && lcm == 0) {\n        lcm = getInteger1 * i;\n      }\n    }\n  }\n}\n\nexport function calculateResults(getFirstMultiplesArray, getSecondMultiplesArray) {\n  var multiplesArray = [];\n  var inputsArray = [];\n  getFirstMultiplesArray.forEach(multiple => {\n    if (getSecondMultiplesArray.includes(multiple)) {\n      multiplesArray.push(multiple);\n      inputsArray.push(null);\n    }\n  });\n  return { multiplesArray, inputsArray };\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { MyInput } from \"../components/InputComponents\";\nimport { AlertSnackbar } from \"../components/AlertComponents\";\nimport { MyFrame } from \"../components/HeadingComponents\";\nimport { MyQuestion } from \"../components/QuestionComponents\";\nimport { StageButtons } from \"../components/StageComponents\";\nimport questions from \"../questions/Questions\";\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport { calculateMultiples, calculateResults } from \"../functions/LCMFunctions\";\nimport { pagesStyles } from \"../themes/styles\";\n\n//×÷👍👍🏻\nexport const LCMMultiplication = ({ languageIndex, topic, learningTool }) => {\n  const [inputIntegersArray, setInputIntegersArray] = useState([null, null]);\n  const [inputIntegerFocusedIndex, setInputIntegerFocusedIndex] = useState(0);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showMultipleRows, setShowMultipleRows] = useState(false);\n  const [firstMultiplesArray, setFirstMultiplesArray] = useState([]);\n  const [secondMultiplesArray, setSecondMultiplesArray] = useState([]);\n  const [firstInputsArray, setFirstInputsArray] = useState([]);\n  const [secondInputsArray, setSecondInputsArray] = useState([]);\n  const [firstArrayFocusedIndex, setFirstArrayFocusedIndex] = useState(0);\n  const [secondArrayFocusedIndex, setSecondArrayFocusedIndex] = useState(0);\n  const [numberOfArraysCorrect, setNumberOfArraysCorrect] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [severity, setSeverity] = useState(\"error\");\n  const numberOfArrays = 2;\n  const [commonMultiplesArray, setCommonMultiplesArray] = useState([]);\n  const [commonInputsArray, setCommonInputsArray] = useState([]);\n  const [commonArrayFocusedIndex, setCommonArrayFocusedIndex] = useState(0);\n  const [lcmResultArray, setLcmResultArray] = useState([null]);\n  const [lcmInputArray, setLcmInputArray] = useState([null]);\n  const [lcmArrayFocusedIndex, setLcmArrayFocusedIndex] = useState(0);\n  const [wholeCompleted, setWholeCompleted] = useState(false);\n  const [stageOrder, setStageOrder] = useState({ stage: 0, order: 0 });\n  const timeDelay = 200;\n\n  const stageText = [\"階段\", \"阶段\", \"Stage\", \"Étape\"];\n  const manual = [\"自擬題目\", \"自拟题目\", \"Personal Task\", \"Tâche personnelle\"];\n\n  const mustBeIntegerMessages = [\n    \"輸入的數必須是整數。\",\n    \"输入的数必须是整数。\",\n    \"The inputted numbers should be integers.\",\n    \"Les nombres entrés doivent être des entiers.\"\n  ];\n\n  const mustBeInRangeMessage = [\n    \"輸入的數必須在1至99以內。\",\n    \"输入的数必须在1至99以内。\",\n    \"The inputted numbers should be in the range of 1 and 99.\",\n    \"Les nombres saisis doivent être compris entre 1 et 99.\"\n  ];\n\n  const mustBeDifferentMessage = [\n    \"兩數必須不相同。\",\n    \"两数必须不相同。\",\n    \"The two integers should not be the same.\",\n    \"Les deux nombres entiers ne devraient pas être identiques.\"\n  ];\n\n  const questionTextLeft = [\n    \"\", \"\", \"L.C.M.(Least Common Multiple) of \", \"L.C.M.(Multiple moins commun) sur \"\n  ];\n\n  const questionTextRight = [\n    \"的L.C.M.(最小公倍數)\", \"的L.C.M(最小公倍数)\", \"\", \"\"\n  ];\n\n  const multipleTextLeft = [\n    \"\", \"\", \"Multiples of \", \"Multiples de \"\n  ];\n\n  const multipleTextRight = [\n    \"的倍數\", \"的倍数\", \"\", \"\"\n  ];\n\n  const commonMultipleTextLeft = [\n    \"\", \"\", \"Common multiples of \", \"Multiples communs de \"\n  ];\n\n  const commonMultipleTextRight = [\n    \"的公倍數\", \"的公倍数\", \"\", \"\"\n  ];\n\n  const commonMultipleHint = [\n    \"由小至大找出相同的倍數。\",\n    \"由小至大找出相同的倍数。\",\n    \"Find the common multiples from small to large.\",\n    \"Trouvez les multiples communs de petit à grand.\"\n  ];\n\n  const lcmHint = [\n    \"在上行的公倍數中找出最小的一個。\",\n    \"在上行的公倍数中找出最小的一个。\",\n    \"Find the smallest one among the common multiples.\",\n    \"Trouvez le plus petit parmi les multiples communs.\"\n  ];\n\n  const tryText = [\n    \"嘗試 \", \"尝试 \", \"Try \", \"Essayer \"\n  ];\n\n  const multiplesCorrectTextLeft = [\n    \"你成功列出\", \"你成功列出\", \"You successfully listed the multiples of \", \"Vous avez répertorié avec succès les multiples de \"\n  ];\n\n  const multiplesCorrectTextRight = [\n    \"的倍數。\", \"的倍数。\", \".\", \".\"\n  ];\n\n  const commonMultiplesCorrectText = [\n    \"你成功列出所有公倍數。\",\n    \"你成功列出所有公倍数。\",\n    \"You successfully list all common multiples.\",\n    \"Vous avez réussi à répertorier tous les multiples communs.\"\n  ];\n\n  const lcmCorrectText = [\n    \"做得好!你求得正確的L.C.M.。\",\n    \"做得好!你求得正确的L.C.M.。\",\n    \"Well done! You got the right L.C.M..\",\n    \"Bien joué! Vous avez le bon L.C.M..\"\n  ];\n\n  useEffect(() => {\n    if (questions.length === 0) {\n      if (stageOrder === { stage: -1, order: 0 }) {\n        setInputIntegersArray([null, null]);\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      if (stageOrder === { stage: 0, order: 0 }) {\n        setQuestion(stageOrder.stage, stageOrder.order);\n      } else {\n        setStageOrder({ stage: 0, order: 0 });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowMultipleRows(false);\n    setShowResult(false);\n    if (stageOrder.stage > -1) {\n      setQuestion(stageOrder.stage, stageOrder.order);\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }, [stageOrder]);\n\n  const handleStageClick = (stage) => {\n    setStageOrder({ stage: stage, order: 0 });\n  };\n\n  const setQuestion = (\n    stage,\n    order\n  ) => {\n    setInputIntegersArray(questions[stage][order])\n  };\n\n  useEffect(() => {\n    if (stageOrder.stage > -1 && inputIntegersArray[1] != null) {\n      okClick();\n    }\n  }, [inputIntegersArray])\n\n  function nextClick() {\n    if (stageOrder.stage > -1) {\n      if (\n        stageOrder.order <\n        questions[stageOrder.stage].length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage, order: stageOrder.order + 1 });\n      } else if (\n        stageOrder.stage <\n        questions.length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage + 1, order: 0 });\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }\n\n  const closeAlert = (e) => {\n    setOpenAlert(false);\n  };\n\n  const handleChange = (e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) => {\n    setOpenAlert(false);\n    if (focusedIndex == index || clickable) {\n      var tmpArray = [...inputsArray];\n      tmpArray[index] = parseInt(e.target.value);\n      setInputValue(tmpArray);\n      switch (groupType) {\n        case \"inputInteger\":\n          setShowMultipleRows(false);\n          setShowResult(false);\n          break;\n        case \"firstMultiple\":\n          checkAnswer(index, e.target.value, firstMultiplesArray, setFirstArrayFocusedIndex);\n          break;\n        case \"secondMultiple\":\n          checkAnswer(index, e.target.value, secondMultiplesArray, setSecondArrayFocusedIndex);\n          break;\n        case \"commonMultiple\":\n          checkAnswer(index, e.target.value, commonMultiplesArray, setCommonArrayFocusedIndex, groupType);\n          break;\n        case \"lcm\":\n          checkAnswer(index, e.target.value, lcmResultArray, setLcmArrayFocusedIndex, groupType);\n          break;\n      }\n    }\n  };\n\n  function checkAnswer(index, value, multiplesArray, setAnswerFocusedIndex, groupType) {\n    if (value == multiplesArray[index]) {\n      if (groupType == \"lcm\") {\n        setErrorMessage(\"👍🏻\" + lcmCorrectText[languageIndex]);\n        setWholeCompleted(true);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n      } else if (index == multiplesArray.length - 1) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n        if (groupType == \"commonMultiple\") {\n          setErrorMessage(\"👍🏻\" + commonMultiplesCorrectText[languageIndex]);\n        } else {\n          setErrorMessage(\"👍🏻\" + multiplesCorrectTextLeft[languageIndex] + multiplesArray[multiplesArray.length - 1] + multiplesCorrectTextRight[languageIndex]);\n          if (numberOfArraysCorrect == numberOfArrays - 1) {\n            setShowResult(true);\n          } else {\n            setNumberOfArraysCorrect(numberOfArraysCorrect + 1);\n          }\n        }\n      } else {\n        setAnswerFocusedIndex(index + 1);\n        setTimeout(() => {\n          setOpenAlert(false);\n        }, timeDelay);\n      }\n    } else {\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        if (groupType == \"lcm\") {\n          setErrorMessage(lcmHint[languageIndex]);\n        } else if (groupType == \"commonMultiple\") {\n          setErrorMessage(commonMultipleHint[languageIndex]);\n        } else if (index == 0) {\n          var tryIntegerString = multiplesArray[0] + \" \";\n          setErrorMessage(tryText[languageIndex] + tryIntegerString);\n        } else {\n          var tryIntegerString = multiplesArray[index - 1] + \"+\" + multiplesArray[0];\n          setErrorMessage(tryText[languageIndex] + tryIntegerString);\n        }\n      }\n    }\n  }\n\n  const okClick = (e) => {\n    if (inputIntegersArray[0] != parseInt(inputIntegersArray[0]) || inputIntegersArray[1] != parseInt(inputIntegersArray[1])) {\n      setErrorMessage(mustBeIntegerMessages[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] < 1 || inputIntegersArray[0] > 99 || inputIntegersArray[1] < 1 || inputIntegersArray[1] > 99) {\n      setErrorMessage(mustBeInRangeMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] == inputIntegersArray[1]) {\n      setErrorMessage(mustBeDifferentMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else {\n      setOpenAlert(false);\n      setShowMultipleRows(false);\n      setTimeout(() => {\n        setShowMultipleRows(true);\n      }, timeDelay);\n      setFirstArrayFocusedIndex(0);\n      setSecondArrayFocusedIndex(0);\n      setNumberOfArraysCorrect(0);\n      setShowResult(false);\n      setCommonArrayFocusedIndex(0);\n      setLcmInputArray([null]);\n      setLcmArrayFocusedIndex(0);\n      setWholeCompleted(false);\n      var { multiplesArray, inputsArray } = calculateMultiples(inputIntegersArray[0], inputIntegersArray[1]);\n      setFirstMultiplesArray(multiplesArray);\n      setFirstInputsArray(inputsArray);\n      var multiplesArray0 = multiplesArray;\n      var { multiplesArray, inputsArray } = calculateMultiples(inputIntegersArray[1], inputIntegersArray[0]);\n      setSecondMultiplesArray(multiplesArray);\n      setSecondInputsArray(inputsArray);\n      var multiplesArray1 = multiplesArray;\n      var { multiplesArray, inputsArray } = calculateResults(multiplesArray0, multiplesArray1);\n      setCommonMultiplesArray(multiplesArray);\n      setCommonInputsArray(inputsArray);\n      setLcmResultArray([multiplesArray[0]]);\n    }\n  };\n\n  const classes = pagesStyles();\n\n  return (\n    <MyFrame topic={topic} learningTool={learningTool}>\n      <Grid className={classes.spaceGrid} />\n      {questions.length > 0 && (\n        <StageButtons\n          stageText={stageText[languageIndex] + \"：\"}\n          stages={Object.keys(questions)}\n          handleStageClick={handleStageClick}\n          stageState={stageOrder.stage}\n          manual={manual[languageIndex]}\n        />\n      )}\n      <Grid className={classes.spaceGrid} />\n      <MyQuestion\n        questionTextLeft={questionTextLeft[languageIndex]}\n        setInputIntegersArray={setInputIntegersArray}\n        inputIntegerFocusedIndex={inputIntegerFocusedIndex}\n        inputIntegersArray={inputIntegersArray}\n        setInputIntegerFocusedIndex={setInputIntegerFocusedIndex}\n        handleChange={handleChange}\n        questionTextRight={questionTextRight[languageIndex]}\n        okClick={okClick}\n      />\n      <AlertSnackbar\n        open={openAlert}\n        closeAlert={closeAlert}\n        errorMessage={errorMessage}\n        severity={severity}\n      />\n      {\n        showMultipleRows && <Grid>\n          <Grid className={classes.centerRow}>\n            <Grid container className={classes.multiplesRows}>\n              <Typography className={classes.commonText}>\n                {multipleTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]}&nbsp;{multipleTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                firstInputsArray.map((multiple, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    <MyInput\n                      index={index}\n                      setInputValue={setFirstInputsArray}\n                      focusedIndex={firstArrayFocusedIndex}\n                      inputsArray={firstInputsArray}\n                      clickable={false}\n                      groupType=\"firstMultiple\"\n                      handleChange={handleChange}\n                    />\n                    <Typography className={classes.commonText}>{(firstInputsArray.length - 1 > index) ? \",\" : \",...\"}</Typography>\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n          <Grid className={classes.centerRow}>\n            <Grid container className={classes.multiplesRows}>\n              <Typography className={classes.commonText}>\n                {multipleTextLeft[languageIndex]}&nbsp;{inputIntegersArray[1]}&nbsp;{multipleTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                secondInputsArray.map((multiple, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    <MyInput\n                      index={index}\n                      setInputValue={setSecondInputsArray}\n                      focusedIndex={secondArrayFocusedIndex}\n                      inputsArray={secondInputsArray}\n                      clickable={false}\n                      groupType=\"secondMultiple\"\n                      handleChange={handleChange}\n                    />\n                    <Typography className={classes.commonText}>{(secondInputsArray.length - 1 > index) ? \",\" : \",...\"}</Typography>\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showResult && <Grid >\n          <Grid className={classes.centerRow}>\n            <Grid className={classes.multiplesRows}>\n              <Paper >\n                <Grid container className={classes.multiplesRows}>\n                  <Typography className={classes.commonText}>\n                    {commonMultipleTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{commonMultipleTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  {\n                    commonInputsArray.map((multiple, index) => {\n                      return <Grid key={index} style={{ display: \"flex\" }}>\n                        <MyInput\n                          index={index}\n                          setInputValue={setCommonInputsArray}\n                          focusedIndex={commonArrayFocusedIndex}\n                          inputsArray={commonInputsArray}\n                          clickable={false}\n                          groupType=\"commonMultiple\"\n                          handleChange={handleChange}\n                        />\n                        <Typography className={classes.commonText}>{(commonInputsArray.length - 1 > index) ? \",\" : \",...\"}</Typography>\n                      </Grid>\n                    })\n                  }\n                </Grid>\n                <Grid container className={classes.multiplesRows}>\n                  <Typography className={classes.commonText}>\n                    {questionTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{questionTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  <MyInput\n                    index={0}\n                    setInputValue={setLcmInputArray}\n                    focusedIndex={lcmArrayFocusedIndex}\n                    inputsArray={lcmInputArray}\n                    clickable={false}\n                    groupType=\"lcm\"\n                    handleChange={handleChange}\n                  />\n                  {\n                    wholeCompleted && <Button\n                      className={classes.okButton}\n                      variant=\"contained\"\n                      onClick={nextClick}\n                      color=\"primary\"\n                    ><ForwardRoundedIcon className={classes.resetArrow} /></Button>\n                  }\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </MyFrame>\n  );\n}\n","export function calculateFactors(getInteger, primeNumbers) {\n  var tmpInteger = getInteger;\n  var factorsArray = [];\n  var inputsArray = [];\n  var i;\n  for (i = 0; i * i < primeNumbers.length; i++) {\n    if (primeNumbers.includes(tmpInteger)) {\n      factorsArray.push(tmpInteger);\n      inputsArray.push(null);\n      i = primeNumbers.length;\n    }\n    var j;\n    for (j = 0; j < getInteger; j++) {\n      if ((tmpInteger % primeNumbers[i]) == 0 ) {\n        tmpInteger = tmpInteger / primeNumbers[i];\n        factorsArray.push(primeNumbers[i]);\n        inputsArray.push(null);\n      } else {\n        j = getInteger;\n      }\n    }\n  }\n  return { factorsArray, inputsArray };\n}\n\nexport function calculateResults(getFirstFactorsArray, getSecondFactorsArray) {\n  var tmpSecondFactorsArray = [...getSecondFactorsArray];\n  var factorsArray = [];\n  var inputsArray = [];\n  getFirstFactorsArray.forEach(factor => {\n    if (tmpSecondFactorsArray.includes(factor)) {\n      factorsArray.push(factor);\n      inputsArray.push(null);\n      delete tmpSecondFactorsArray[tmpSecondFactorsArray.indexOf(factor)];\n    }\n  });\n  if (factorsArray.length == 0) {\n    factorsArray.push(1);\n    inputsArray.push(null);\n  }\n  return { factorsArray, inputsArray };\n}","export function getPrimeNumbers() {\n  var i;\n  var tmpPrimeNumbersArray = [2];\n  for (i = 3; i < 100; i++) {\n    var isPrime = true;\n    var j;\n    for (j = 0; j < tmpPrimeNumbersArray.length; j++) {\n      if ((i % tmpPrimeNumbersArray[j]) == 0) {\n        isPrime = false;\n        j = tmpPrimeNumbersArray.length;\n      } else if ((tmpPrimeNumbersArray[j] ** 2) > i) {\n        j = tmpPrimeNumbersArray.length;\n      }\n    }\n    if (isPrime) {\n      tmpPrimeNumbersArray.push(i);\n    }\n  }\n  return tmpPrimeNumbersArray;\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport { MyInput } from \"../components/InputComponents\";\nimport { AlertSnackbar } from \"../components/AlertComponents\";\nimport { MyFrame } from \"../components/HeadingComponents\";\nimport { MyQuestion } from \"../components/QuestionComponents\";\nimport { StageButtons } from \"../components/StageComponents\";\nimport questions from \"../questions/Questions\";\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport { calculateFactors, calculateResults } from \"../functions/HCFPrimeFunctions\";\nimport { getPrimeNumbers } from \"../functions/PrimeNumbersFunctions\";\nimport { pagesStyles } from \"../themes/styles\";\n\n//×÷👍👍🏻\nexport const HCFPrimeFactorization = ({ languageIndex, topic, learningTool }) => {\n  const [inputIntegersArray, setInputIntegersArray] = useState([null, null]);\n  const [inputIntegerFocusedIndex, setInputIntegerFocusedIndex] = useState(0);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDivisionColomns, setShowDivisionColomns] = useState(false);\n  const [firstDivisorsArray, setFirstDivisorsArray] = useState([]);\n  const [firstQuotientsArray, setFirstQuotientsArray] = useState([]);\n  const [secondDivisorsArray, setSecondDivisorsArray] = useState([]);\n  const [secondQuotientsArray, setSecondQuotientsArray] = useState([]);\n  const [firstDivisorFocusedIndex, setFirstDivisorFocusedIndex] = useState(0);\n  const [secondDivisorFocusedIndex, setSecondDivisorFocusedIndex] = useState(0);\n  const [firstQuotientFocusedIndex, setFirstQuotientFocusedIndex] = useState(0);\n  const [secondQuotientFocusedIndex, setSecondQuotientFocusedIndex] = useState(0);\n  const [firstDivisionCompleted, setFirstDivisionCompleted] = useState(false);\n  const [secondDivisionCompleted, setSecondDivisionCompleted] = useState(false);\n  const [showFactorsColomns, setShowFactorsColomns] = useState(false);\n  const [firstFactorsArray, setFirstFactorsArray] = useState([]);\n  const [secondFactorsArray, setSecondFactorsArray] = useState([]);\n  const [firstInputsArray, setFirstInputsArray] = useState([]);\n  const [secondInputsArray, setSecondInputsArray] = useState([]);\n  const [firstArrayFocusedIndex, setFirstArrayFocusedIndex] = useState(0);\n  const [secondArrayFocusedIndex, setSecondArrayFocusedIndex] = useState(0);\n  const [numberOfArraysCorrect, setNumberOfArraysCorrect] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [severity, setSeverity] = useState(\"error\");\n  const numberOfArrays = 2;\n  const [commonFactorsArray, setCommonFactorsArray] = useState([]);\n  const [commonInputsArray, setCommonInputsArray] = useState([]);\n  const [commonArrayFocusedIndex, setCommonArrayFocusedIndex] = useState(0);\n  const [hcfResultArray, setHcfResultArray] = useState([null]);\n  const [hcfInputArray, setHcfInputArray] = useState([null]);\n  const [hcfArrayFocusedIndex, setHcfArrayFocusedIndex] = useState(0);\n  const [primeNumbers, setPrimeNumbers] = useState([]);\n  const [wholeCompleted, setWholeCompleted] = useState(false);\n  const [stageOrder, setStageOrder] = useState({ stage: 0, order: 0 });\n  const timeDelay = 200;\n\n  const stageText = [\"階段\", \"阶段\", \"Stage\", \"Étape\"];\n  const manual = [\"自擬題目\", \"自拟题目\", \"Personal Task\", \"Tâche personnelle\"];\n\n  const mustBeIntegerMessages = [\n    \"輸入的數必須是整數。\",\n    \"输入的数必须是整数。\",\n    \"The inputted numbers should be integers.\",\n    \"Les nombres entrés doivent être des entiers.\"\n  ];\n\n  const mustBeInRangeMessage = [\n    \"輸入的數必須在1至99以內。\",\n    \"输入的数必须在1至99以内。\",\n    \"The inputted numbers should be in the range of 1 and 99.\",\n    \"Les nombres saisis doivent être compris entre 1 et 99.\"\n  ];\n\n  const mustBeDifferentMessage = [\n    \"兩數必須不相同。\",\n    \"两数必须不相同。\",\n    \"The two integers should not be the same.\",\n    \"Les deux nombres entiers ne devraient pas être identiques.\"\n  ];\n\n  const questionTextLeft = [\n    \"\", \"\", \"H.C.F./G.C.F.(Highest/Greatest Common Factor) of \", \"H.C.F./G.C.F.(Facteur commun le plus élevé / le plus grand) sur \"\n  ];\n\n  const questionTextRight = [\n    \"的H.C.F./G.C.F.(最大公因數)\", \"的H.C.F./G.C.F.(最大公因数)\", \"\", \"\"\n  ];\n\n  const factorTextLeft = [\n    \"\", \"\", \"Prime factorization of \", \"Factorisation prime de \"\n  ];\n\n  const factorTextRight = [\n    \"的質因數分解\", \"的质因数分解\", \"\", \"\"\n  ];\n\n  const mustBeAPrimeText = [\n    \"進行質因數分解時，你需要運用質數，例如2,3,5,7,...。\",\n    \"进行质因数分解时，你需要运用质数，例如2,3,5,7,...。\",\n    \"When performing prime factorization, you need to use prime numbers, such as 2,3,5,7,....\",\n    \"Lors de la factorisation des nombres premiers, vous devez utiliser des nombres premiers, tels que 2,3,5,7,....\"\n  ];\n\n  const mustBeAFactorTextLeft = [\n    \"這數必須是\", \"这数必须是\", \"This number must be a factor of \", \"Ce nombre doit être un facteur de \"\n  ];\n\n  const mustBeAFactorTextRight = [\n    \"的因數。\", \"的因数。\", \".\", \".\"\n  ];\n\n  const quotientIsAPrimeQuestionLeft = [\n    \"如果\", \"如果\", \"If \", \"Si \"\n  ];\n\n  const quotientIsAPrimeQuestionRight = [\n    \"是質數，請按\", \"是质数，请按\", \" is a prime number, please press \", \" est un nombre premier, veuillez appuyer sur \"\n  ];\n\n  const completeButtonText = [\n    \"完成\", \"完成\", \"Completed\", \"Terminé\"\n  ];\n\n  const divisionCompletedText = [\n    \"這是質數，不能再被2,3,5,7,...整除。你完成這質因數分解的短除。\",\n    \"这是质数，不能再被2,3,5,7,...整除。你完成这质因数分解的短除。\",\n    \"This is a prime number and can no longer be divisible by 2,3,5,7,... You completed this short division of prime factorization.\",\n    \"C'est un nombre premier et ne peut plus être divisible par 2,3,5,7,... Vous avez terminé cette courte division de la factorisation des nombres premiers.\"\n  ];\n\n  const divisionIncompleteHint = [\n    \"這數是一個合成數，仍可以被一些質數整除。\",\n    \"这数是一个合成数，仍可以被一些质数整除。\",\n    \"This number is a composite number, still divisible by some prime numbers.\",\n    \"Ce nombre est un nombre composé, toujours divisible par quelques nombres premiers.\"\n  ];\n\n  const primeFactorHint = [\n    \"把上面的質因數(黃色方格)由小至大列寫出來。\",\n    \"把上面的质因数(黄色方格)由小至大列写出来。\",\n    \"Write down the prime factors above (yellow blocks) from small to large.\",\n    \"Notez les facteurs premiers ci-dessus (blocs jaunes) de petit à grand.\"\n  ];\n\n  const commonFactorTextLeft = [\n    \"\", \"\", \"Common factors of \", \"Facteurs communs de \"\n  ];\n\n  const commonFactorTextRight = [\n    \"的共有因數\", \"的共有因数\", \"\", \"\"\n  ];\n\n  const commonFactorHint = [\n    \"由小至大找出共有的質因數。\",\n    \"由小至大找出共有的质因数。\",\n    \"Find the common prime factors from small to large.\",\n    \"Trouvez les facteurs premiers communs de petit à grand.\"\n  ];\n\n  const tryText = [\n    \"嘗試 \", \"尝试 \", \"Try \", \"Essayer \"\n  ];\n\n  const factorsCorrectTextLeft = [\n    \"你成功寫出\", \"你成功写出\", \"You successfully write the prime factorization of \", \"Vous écrivez avec succès la factorisation première de \"\n  ];\n\n  const factorsCorrectTextRight = [\n    \"的質因數分解。\", \"的质因数分解。\", \".\", \".\"\n  ];\n\n  const commonFactorsCorrectText = [\n    \"你成功寫出共有的質因數。\",\n    \"你成功写出共有的质因数。\",\n    \"You successfully write the common prime factors.\",\n    \"Vous écrivez avec succès les facteurs premiers communs.\"\n  ];\n\n  const hcfHint = [\n    \"把上行共有的質因數乘起來。\",\n    \"把上行共有的质因数乘起来。\",\n    \"Multiply all the common prime factors above.\",\n    \"Multipliez tous les facteurs premiers communs ci-dessus.\"\n  ];\n\n  const hcfOneHint = [\n    \"這H.C.F.比所有質數(2,3,5,7,...)小，不能從短除的結果中找出來。\",\n    \"这H.C.F.比所有质数(2,3,5,7,...)小，不能从短除的结果中找出来。\",\n    \"This H.C.F. is smaller than all prime numbers (2,3,5,7,...) and cannot be found from the result of short division.\",\n    \"Ce H.C.F.est plus petit que tous les nombres premiers (2,3,5,7, ...) et ne peut être trouvé à partir du résultat d'une division courte.\"\n  ];\n\n  const hcfCorrectText = [\n    \"做得好!你求得正確的H.C.F.。\",\n    \"做得好!你求得正确的H.C.F.。\",\n    \"Well done! You got the right H.C.F..\",\n    \"Bien joué! Vous avez le bon H.C.F..\"\n  ];\n\n  useEffect(() => {\n    setPrimeNumbers(getPrimeNumbers());\n    if (questions.length === 0) {\n      if (stageOrder === { stage: -1, order: 0 }) {\n        setInputIntegersArray([null, null]);\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      if (stageOrder === { stage: 0, order: 0 }) {\n        setQuestion(stageOrder.stage, stageOrder.order);\n      } else {\n        setStageOrder({ stage: 0, order: 0 });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowDivisionColomns(false);\n    setShowFactorsColomns(false);\n    setShowResult(false);\n    if (stageOrder.stage > -1) {\n      setQuestion(stageOrder.stage, stageOrder.order);\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }, [stageOrder]);\n\n  const handleStageClick = (stage) => {\n    setStageOrder({ stage: stage, order: 0 });\n  };\n\n  const setQuestion = (\n    stage,\n    order\n  ) => {\n    setInputIntegersArray(questions[stage][order])\n  };\n\n  useEffect(() => {\n    if (stageOrder.stage > -1 && inputIntegersArray[1] != null) {\n      okClick();\n    }\n  }, [inputIntegersArray])\n\n  function nextClick() {\n    if (stageOrder.stage > -1) {\n      if (\n        stageOrder.order <\n        questions[stageOrder.stage].length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage, order: stageOrder.order + 1 });\n      } else if (\n        stageOrder.stage <\n        questions.length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage + 1, order: 0 });\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }\n\n  const closeAlert = (e) => {\n    setOpenAlert(false);\n  };\n\n  const handleChange = (e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) => {\n    setOpenAlert(false);\n    if (focusedIndex == index || clickable) {\n      var tmpArray = [...inputsArray];\n      tmpArray[index] = parseInt(e.target.value);\n      setInputValue(tmpArray);\n      switch (groupType) {\n        case \"inputInteger\":\n          setShowDivisionColomns(false);\n          setShowFactorsColomns(false);\n          setShowResult(false);\n          break;\n        case \"firstFactor\":\n          checkAnswer(index, e.target.value, firstFactorsArray, setFirstArrayFocusedIndex, groupType, inputIntegersArray[0]);\n          break;\n        case \"secondFactor\":\n          checkAnswer(index, e.target.value, secondFactorsArray, setSecondArrayFocusedIndex, groupType, inputIntegersArray[1]);\n          break;\n        case \"commonFactor\":\n          checkAnswer(index, e.target.value, commonFactorsArray, setCommonArrayFocusedIndex, groupType);\n          break;\n        case \"hcf\":\n          checkAnswer(index, e.target.value, hcfResultArray, setHcfArrayFocusedIndex, groupType);\n          break;\n        case \"firstDivisor\":\n          checkDivisor(index, e.target.value, firstQuotientsArray[index], setFirstDivisorFocusedIndex);\n          break;\n        case \"secondDivisor\":\n          checkDivisor(index, e.target.value, secondQuotientsArray[index], setSecondDivisorFocusedIndex);\n          break;\n        case \"firstQuotient\":\n          checkQuotient(index, e.target.value, firstDivisorsArray, firstQuotientsArray, setFirstDivisorsArray, setFirstQuotientsArray, setFirstQuotientFocusedIndex, firstDivisorFocusedIndex);\n          break;\n        case \"secondQuotient\":\n          checkQuotient(index, e.target.value, secondDivisorsArray, secondQuotientsArray, setSecondDivisorsArray, setSecondQuotientsArray, setSecondQuotientFocusedIndex, secondDivisorFocusedIndex);\n          break;\n      }\n    }\n  };\n\n  function checkDivisor(index, value, quotient, setAnswerFocusedIndex) {\n    //correct divisor\n    if (quotient % value == 0) {//} && value > 1 && value < quotient) {\n      if (primeNumbers.includes(parseInt(value))) {\n        setTimeout(() => {\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }, timeDelay);\n      } else {\n        //not a prime factor\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(mustBeAPrimeText[languageIndex]);\n        }\n      }\n    } else {\n      //not a factor\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        setErrorMessage(mustBeAFactorTextLeft[languageIndex] + quotient + mustBeAFactorTextRight[languageIndex]);\n      }\n    }\n  }\n\n  function checkQuotient(index, value, divisorsArray, quotientsArray, setDivisorsArray, setQuotientsArray, setAnswerFocusedIndex, divisorIndex) {\n    if (divisorIndex == index && !primeNumbers.includes(quotientsArray[index - 1])) {\n      //correct quotient\n      if (value == quotientsArray[index - 1] / divisorsArray[index - 1]) {\n        setTimeout(() => {\n          var tmpDivisorsArray = [...divisorsArray];\n          var tmpQuotientsArray = [...quotientsArray];\n          tmpQuotientsArray[index] = parseInt(value);\n          tmpDivisorsArray.push(null);\n          tmpQuotientsArray.push(null);\n          setDivisorsArray(tmpDivisorsArray);\n          setQuotientsArray(tmpQuotientsArray);\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }, timeDelay);\n      } else {\n        //incorrect quotient\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(quotientsArray[index - 1] + \" ÷ \" + divisorsArray[index - 1] + \" = ?\");\n        }\n      }\n    }\n  }\n\n  function checkAnswer(index, value, factorsArray, setAnswerFocusedIndex, groupType, inputInteger) {\n    //correct factor\n    if (value == factorsArray[index]) {\n      if (groupType == \"hcf\") {\n        setErrorMessage(\"👍🏻\" + hcfCorrectText[languageIndex]);\n        setWholeCompleted(true);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n      } else if ([\"firstFactor\", \"secondFactor\", \"commonFactor\"].includes(groupType)) {\n        if (index == factorsArray.length - 1) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"success\");\n          setAnswerFocusedIndex(-1);\n          if (groupType == \"commonFactor\") {\n            setErrorMessage(\"👍🏻\" + commonFactorsCorrectText[languageIndex]);\n          } else {\n            setErrorMessage(\"👍🏻\" + factorsCorrectTextLeft[languageIndex] + inputInteger + factorsCorrectTextRight[languageIndex]);\n            if (numberOfArraysCorrect == numberOfArrays - 1) {\n              setShowResult(true);\n            } else {\n              setNumberOfArraysCorrect(numberOfArraysCorrect + 1);\n            }\n          }\n        } else {\n          setAnswerFocusedIndex(index + 1);\n          setTimeout(() => {\n            setOpenAlert(false);\n          }, timeDelay);\n        }\n      }\n      //incorrect factor\n    } else {\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        if (groupType == \"hcf\") {\n          if (hcfResultArray[0] == 1) {\n            setErrorMessage(hcfOneHint[languageIndex]);\n          } else {\n            setErrorMessage(hcfHint[languageIndex]);\n          }\n        } else if (groupType == \"commonFactor\") {\n          if (hcfResultArray[0] == 1) {\n            setErrorMessage(hcfOneHint[languageIndex]);\n          } else {\n            setErrorMessage(commonFactorHint[languageIndex]);\n          }\n        } else {\n          setErrorMessage(primeFactorHint[languageIndex]);\n        }\n      }\n    }\n  }\n\n  const completeClick = (e, quotient, setDivisionCompleted, anotherDivisionCompleted) => {\n    if (primeNumbers.includes(quotient)) {\n      setDivisionCompleted(true);\n      setErrorMessage(\"👍🏻\" + divisionCompletedText[languageIndex]);\n      setSeverity(\"success\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n      if (anotherDivisionCompleted) {\n        setShowFactorsColomns(true);\n      }\n    } else {\n      setErrorMessage(divisionIncompleteHint[languageIndex]);\n      setSeverity(\"error\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    }\n  };\n\n  const okClick = (e) => {\n    if (inputIntegersArray[0] != parseInt(inputIntegersArray[0]) || inputIntegersArray[1] != parseInt(inputIntegersArray[1])) {\n      setErrorMessage(mustBeIntegerMessages[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] < 1 || inputIntegersArray[0] > 99 || inputIntegersArray[1] < 1 || inputIntegersArray[1] > 99) {\n      setErrorMessage(mustBeInRangeMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] == inputIntegersArray[1]) {\n      setErrorMessage(mustBeDifferentMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else {\n      setOpenAlert(false);\n      setShowDivisionColomns(false);\n      setTimeout(() => {\n        setShowDivisionColomns(true);\n      }, timeDelay);\n      setFirstDivisorsArray([null, null]);\n      setFirstQuotientsArray([inputIntegersArray[0], null]);\n      setSecondDivisorsArray([null, null]);\n      setSecondQuotientsArray([inputIntegersArray[1], null]);\n      setFirstDivisorFocusedIndex(0);\n      setSecondDivisorFocusedIndex(0);\n      setFirstQuotientFocusedIndex(1);\n      setSecondQuotientFocusedIndex(1);\n      setFirstDivisionCompleted(false);\n      setSecondDivisionCompleted(false);\n      setShowFactorsColomns(false);\n      setFirstArrayFocusedIndex(0);\n      setSecondArrayFocusedIndex(0);\n      setNumberOfArraysCorrect(0);\n      setShowResult(false);\n      setCommonArrayFocusedIndex(0);\n      setHcfInputArray([null]);\n      setHcfArrayFocusedIndex(0);\n      setWholeCompleted(false);\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[0], primeNumbers);\n      setFirstFactorsArray(factorsArray);\n      setFirstInputsArray(inputsArray);\n      var factorsArray0 = factorsArray;\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[1], primeNumbers);\n      setSecondFactorsArray(factorsArray);\n      setSecondInputsArray(inputsArray);\n      var factorsArray1 = factorsArray;\n      var { factorsArray, inputsArray } = calculateResults(factorsArray0, factorsArray1);\n      setCommonFactorsArray(factorsArray);\n      setCommonInputsArray(inputsArray);\n      var tmpHcf = 1;\n      var i;\n      for (i = 0; i < factorsArray.length; i++) {\n        tmpHcf *= factorsArray[i];\n      }\n      setHcfResultArray([tmpHcf]);\n    }\n  };\n\n  const classes = pagesStyles();\n\n  return (\n    <MyFrame topic={topic} learningTool={learningTool}>\n      <Grid className={classes.spaceGrid} />\n      {questions.length > 0 && (\n        <StageButtons\n          stageText={stageText[languageIndex] + \"：\"}\n          stages={Object.keys(questions)}\n          handleStageClick={handleStageClick}\n          stageState={stageOrder.stage}\n          manual={manual[languageIndex]}\n        />\n      )}\n      <Grid className={classes.spaceGrid} />\n      <MyQuestion\n        questionTextLeft={questionTextLeft[languageIndex]}\n        setInputIntegersArray={setInputIntegersArray}\n        inputIntegerFocusedIndex={inputIntegerFocusedIndex}\n        inputIntegersArray={inputIntegersArray}\n        setInputIntegerFocusedIndex={setInputIntegerFocusedIndex}\n        handleChange={handleChange}\n        questionTextRight={questionTextRight[languageIndex]}\n        okClick={okClick}\n      />\n      <AlertSnackbar\n        open={openAlert}\n        closeAlert={closeAlert}\n        errorMessage={errorMessage}\n        severity={severity}\n      />\n      {\n        showDivisionColomns &&\n        <Grid container className={classes.centerRow}>\n          <Grid className={classes.divisionColomn}>\n            <Grid className={classes.divisionInsideColumn}>\n              {\n                firstDivisorsArray.map((divisor, index) => {\n                  return <Grid key={index} className={classes.divisionRow}>\n                    {\n                      ((index < firstDivisorsArray.length - 2) || ((index == firstDivisorsArray.length - 2) && !firstDivisionCompleted)) &&\n                      <Box\n                        border={0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setFirstDivisorsArray}\n                          focusedIndex={firstDivisorFocusedIndex}\n                          inputsArray={firstDivisorsArray}\n                          clickable={false}\n                          groupType=\"firstDivisor\"\n                          handleChange={handleChange}\n                          highlighted={firstDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                    {\n                      ((index < firstDivisorsArray.length - 1) || ((index == firstDivisorsArray.length - 1) && !firstDivisionCompleted)) &&\n                      <Box\n                        borderBottom={(index < firstDivisorsArray.length - 2) || (index == firstDivisorsArray.length - 2 && (!firstDivisionCompleted) || index == 0) ? 2 : 0}\n                        borderLeft={(index < firstDivisorsArray.length - 2) || (index == firstDivisorsArray.length - 2 && (!firstDivisionCompleted) || index == 0) ? 2 : 0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setFirstQuotientsArray}\n                          focusedIndex={firstQuotientFocusedIndex}\n                          inputsArray={firstQuotientsArray}\n                          clickable={false}\n                          groupType=\"firstQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == firstDivisorsArray.length - 2) && firstDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                  </Grid>\n                })\n              }\n            </Grid>\n            <Grid className={classes.centerRow}>\n              <Typography className={classes.commonText}>\n                {quotientIsAPrimeQuestionLeft[languageIndex]}\n                {firstQuotientsArray[firstQuotientFocusedIndex - 1]}\n                {quotientIsAPrimeQuestionRight[languageIndex]}\n              </Typography>\n              <Button\n                className={classes.completeButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => { completeClick(e, firstQuotientsArray[firstQuotientFocusedIndex - 1], setFirstDivisionCompleted, secondDivisionCompleted) }}\n              >\n                {completeButtonText[languageIndex]}\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid className={classes.divisionColomn}>\n            <Grid className={classes.divisionInsideColumn}>\n              {\n                secondDivisorsArray.map((divisor, index) => {\n                  return <Grid key={index} className={classes.divisionRow}>\n                    {\n                      ((index < secondDivisorsArray.length - 2) || ((index == secondDivisorsArray.length - 2) && !secondDivisionCompleted)) &&\n                      <Box\n                        border={0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setSecondDivisorsArray}\n                          focusedIndex={secondDivisorFocusedIndex}\n                          inputsArray={secondDivisorsArray}\n                          clickable={false}\n                          groupType=\"secondDivisor\"\n                          handleChange={handleChange}\n                          highlighted={secondDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                    {\n                      ((index < secondDivisorsArray.length - 1) || ((index == secondDivisorsArray.length - 1) && !secondDivisionCompleted)) &&\n                      <Box\n                        borderBottom={(index < secondDivisorsArray.length - 2) || (index == secondDivisorsArray.length - 2 && (!secondDivisionCompleted) || index == 0) ? 2 : 0}\n                        borderLeft={(index < secondDivisorsArray.length - 2) || (index == secondDivisorsArray.length - 2 && (!secondDivisionCompleted) || index == 0) ? 2 : 0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setSecondQuotientsArray}\n                          focusedIndex={secondQuotientFocusedIndex}\n                          inputsArray={secondQuotientsArray}\n                          clickable={false}\n                          groupType=\"secondQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == secondDivisorsArray.length - 2) && secondDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                  </Grid>\n                })\n              }\n            </Grid>\n            <Grid className={classes.centerRow}>\n              <Typography className={classes.commonText}>\n                {quotientIsAPrimeQuestionLeft[languageIndex]}\n                {secondQuotientsArray[secondQuotientFocusedIndex - 1]}\n                {quotientIsAPrimeQuestionRight[languageIndex]}\n              </Typography>\n              <Button\n                className={classes.completeButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => { completeClick(e, secondQuotientsArray[secondQuotientFocusedIndex - 1], setSecondDivisionCompleted, firstDivisionCompleted) }}\n              >\n                {completeButtonText[languageIndex]}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showFactorsColomns && <Grid>\n          <Grid container className={classes.centerRow}>\n            <Grid container className={classes.factorsRows}>\n              <Typography className={classes.commonText}>\n                {factorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]}&nbsp;{factorTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                firstInputsArray.map((factor, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                    <MyInput\n                      index={index}\n                      setInputValue={setFirstInputsArray}\n                      focusedIndex={firstArrayFocusedIndex}\n                      inputsArray={firstInputsArray}\n                      clickable={false}\n                      groupType=\"firstFactor\"\n                      handleChange={handleChange}\n                    />\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n          <Grid container className={classes.centerRow}>\n            <Grid container className={classes.factorsRows}>\n              <Typography className={classes.commonText}>\n                {factorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[1]}&nbsp;{factorTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                secondInputsArray.map((factor, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                    <MyInput\n                      index={index}\n                      setInputValue={setSecondInputsArray}\n                      focusedIndex={secondArrayFocusedIndex}\n                      inputsArray={secondInputsArray}\n                      clickable={false}\n                      groupType=\"secondFactor\"\n                      handleChange={handleChange}\n                    />\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showResult && <Grid >\n          <Grid className={classes.centerRow}>\n            <Grid className={classes.factorsRows}>\n              <Paper >\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {commonFactorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{commonFactorTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  {\n                    commonInputsArray.map((factor, index) => {\n                      return <Grid key={index} style={{ display: \"flex\" }}>\n                        {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                        <MyInput\n                          index={index}\n                          setInputValue={setCommonInputsArray}\n                          focusedIndex={commonArrayFocusedIndex}\n                          inputsArray={commonInputsArray}\n                          clickable={false}\n                          groupType=\"commonFactor\"\n                          handleChange={handleChange}\n                        />\n                      </Grid>\n                    })\n                  }\n                </Grid>\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {questionTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{questionTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  <MyInput\n                    index={0}\n                    setInputValue={setHcfInputArray}\n                    focusedIndex={hcfArrayFocusedIndex}\n                    inputsArray={hcfInputArray}\n                    clickable={false}\n                    groupType=\"hcf\"\n                    handleChange={handleChange}\n                  />\n                  {\n                    wholeCompleted && <Button\n                      className={classes.okButton}\n                      variant=\"contained\"\n                      onClick={nextClick}\n                      color=\"primary\"\n                    ><ForwardRoundedIcon className={classes.resetArrow} /></Button>\n                  }\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </MyFrame>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport { MyInput } from \"../components/InputComponents\";\nimport { AlertSnackbar } from \"../components/AlertComponents\";\nimport { MyFrame } from \"../components/HeadingComponents\";\nimport { MyQuestion } from \"../components/QuestionComponents\";\nimport { StageButtons } from \"../components/StageComponents\";\nimport questions from \"../questions/Questions\";\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport { calculateFactors } from \"../functions/HCFPrimeFunctions\";\nimport { calculateResults } from \"../functions/LCMPrimeFunctions\";\nimport { getPrimeNumbers } from \"../functions/PrimeNumbersFunctions\";\nimport { pagesStyles } from \"../themes/styles\";\n\n//×÷👍👍🏻\nexport const LCMPrimeFactorization = ({ languageIndex, topic, learningTool }) => {\n  const [inputIntegersArray, setInputIntegersArray] = useState([null, null]);\n  const [inputIntegerFocusedIndex, setInputIntegerFocusedIndex] = useState(0);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDivisionColomns, setShowDivisionColomns] = useState(false);\n  const [firstDivisorsArray, setFirstDivisorsArray] = useState([]);\n  const [firstQuotientsArray, setFirstQuotientsArray] = useState([]);\n  const [secondDivisorsArray, setSecondDivisorsArray] = useState([]);\n  const [secondQuotientsArray, setSecondQuotientsArray] = useState([]);\n  const [firstDivisorFocusedIndex, setFirstDivisorFocusedIndex] = useState(0);\n  const [secondDivisorFocusedIndex, setSecondDivisorFocusedIndex] = useState(0);\n  const [firstQuotientFocusedIndex, setFirstQuotientFocusedIndex] = useState(0);\n  const [secondQuotientFocusedIndex, setSecondQuotientFocusedIndex] = useState(0);\n  const [firstDivisionCompleted, setFirstDivisionCompleted] = useState(false);\n  const [secondDivisionCompleted, setSecondDivisionCompleted] = useState(false);\n  const [showFactorsColomns, setShowFactorsColomns] = useState(false);\n  const [firstFactorsArray, setFirstFactorsArray] = useState([]);\n  const [secondFactorsArray, setSecondFactorsArray] = useState([]);\n  const [firstInputsArray, setFirstInputsArray] = useState([]);\n  const [secondInputsArray, setSecondInputsArray] = useState([]);\n  const [firstArrayFocusedIndex, setFirstArrayFocusedIndex] = useState(0);\n  const [secondArrayFocusedIndex, setSecondArrayFocusedIndex] = useState(0);\n  const [numberOfArraysCorrect, setNumberOfArraysCorrect] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [severity, setSeverity] = useState(\"error\");\n  const numberOfArrays = 2;\n  const [commonFactorsArray, setCommonFactorsArray] = useState([]);\n  const [commonInputsArray, setCommonInputsArray] = useState([]);\n  const [commonArrayFocusedIndex, setCommonArrayFocusedIndex] = useState(0);\n  const [lcmResultArray, setLcmResultArray] = useState([null]);\n  const [lcmInputArray, setLcmInputArray] = useState([null]);\n  const [lcmArrayFocusedIndex, setLcmArrayFocusedIndex] = useState(0);\n  const [primeNumbers, setPrimeNumbers] = useState([]);\n  const [wholeCompleted, setWholeCompleted] = useState(false);\n  const [stageOrder, setStageOrder] = useState({ stage: 0, order: 0 });\n  const timeDelay = 200;\n\n  const stageText = [\"階段\", \"阶段\", \"Stage\", \"Étape\"];\n  const manual = [\"自擬題目\", \"自拟题目\", \"Personal Task\", \"Tâche personnelle\"];\n\n  const mustBeIntegerMessages = [\n    \"輸入的數必須是整數。\",\n    \"输入的数必须是整数。\",\n    \"The inputted numbers should be integers.\",\n    \"Les nombres entrés doivent être des entiers.\"\n  ];\n\n  const mustBeInRangeMessage = [\n    \"輸入的數必須在1至99以內。\",\n    \"输入的数必须在1至99以内。\",\n    \"The inputted numbers should be in the range of 1 and 99.\",\n    \"Les nombres saisis doivent être compris entre 1 et 99.\"\n  ];\n\n  const mustBeDifferentMessage = [\n    \"兩數必須不相同。\",\n    \"两数必须不相同。\",\n    \"The two integers should not be the same.\",\n    \"Les deux nombres entiers ne devraient pas être identiques.\"\n  ];\n\n  const questionTextLeft = [\n    \"\", \"\", \"L.C.M.(Least Common Multiple) of \", \"L.C.M.(Multiple moins commun) sur \"\n  ];\n\n  const questionTextRight = [\n    \"的L.C.M.(最小公倍數)\", \"的L.C.M.(最小公倍数)\", \"\", \"\"\n  ];\n\n  const factorTextLeft = [\n    \"\", \"\", \"Prime factorization of \", \"Factorisation prime de \"\n  ];\n\n  const factorTextRight = [\n    \"的質因數分解\", \"的质因数分解\", \"\", \"\"\n  ];\n\n  const mustBeAPrimeText = [\n    \"進行質因數分解時，你需要運用質數，例如2,3,5,7,...。\",\n    \"进行质因数分解时，你需要运用质数，例如2,3,5,7,...。\",\n    \"When performing prime factorization, you need to use prime numbers, such as 2,3,5,7,....\",\n    \"Lors de la factorisation des nombres premiers, vous devez utiliser des nombres premiers, tels que 2,3,5,7,....\"\n  ];\n\n  const mustBeAFactorTextLeft = [\n    \"這數必須是\", \"这数必须是\", \"This number must be a factor of \", \"Ce nombre doit être un facteur de \"\n  ];\n\n  const mustBeAFactorTextRight = [\n    \"的因數。\", \"的因数。\", \".\", \".\"\n  ];\n\n  const quotientIsAPrimeQuestionLeft = [\n    \"如果\", \"如果\", \"If \", \"Si \"\n  ];\n\n  const quotientIsAPrimeQuestionRight = [\n    \"是質數，請按\", \"是质数，请按\", \" is a prime number, please press \", \" est un nombre premier, veuillez appuyer sur \"\n  ];\n\n  const completeButtonText = [\n    \"完成\", \"完成\", \"Completed\", \"Terminé\"\n  ];\n\n  const divisionCompletedText = [\n    \"這是質數，不能再被2,3,5,7,...整除。你完成這質因數分解的短除。\",\n    \"这是质数，不能再被2,3,5,7,...整除。你完成这质因数分解的短除。\",\n    \"This is a prime number and can no longer be divisible by 2,3,5,7,... You completed this short division of prime factorization.\",\n    \"C'est un nombre premier et ne peut plus être divisible par 2,3,5,7,... Vous avez terminé cette courte division de la factorisation des nombres premiers.\"\n  ];\n\n  const divisionIncompleteHint = [\n    \"這數是一個合成數，仍可以被一些質數整除。\",\n    \"这数是一个合成数，仍可以被一些质数整除。\",\n    \"This number is a composite number, still divisible by some prime numbers.\",\n    \"Ce nombre est un nombre composé, toujours divisible par quelques nombres premiers.\"\n  ];\n\n  const primeFactorHint = [\n    \"把上面的質因數(黃色方格)由小至大列寫出來。\",\n    \"把上面的质因数(黄色方格)由小至大列写出来。\",\n    \"Write down the prime factors above (yellow blocks) from small to large.\",\n    \"Notez les facteurs premiers ci-dessus (blocs jaunes) de petit à grand.\"\n  ];\n\n  const commonFactorTextLeft = [\n    \"綜合\", \"综合\", \"Combining all prime factors of \", \"Combinant tous les facteurs premiers de \"\n  ];\n\n  const commonFactorTextRight = [\n    \"的所有質因數\", \"的共有因数\", \"\", \"\"\n  ];\n\n  const commonFactorHint = [\n    \"要成為兩數的公倍數，必須包含兩數所有的質因數。\",\n    \"要成为两数的公倍数，必须包含两数所有的质因数。\",\n    \"To be a common multiple of two numbers, it must include all the prime factors of the two numbers.\",\n    \"Pour être un multiple commun de deux nombres, il doit inclure tous les facteurs premiers des deux nombres.\"\n  ];\n\n  const tryText = [\n    \"嘗試 \", \"尝试 \", \"Try \", \"Essayer \"\n  ];\n\n  const factorsCorrectTextLeft = [\n    \"你成功寫出\", \"你成功写出\", \"You successfully write the prime factorization of \", \"Vous écrivez avec succès la factorisation première de \"\n  ];\n\n  const factorsCorrectTextRight = [\n    \"的質因數分解。\", \"的质因数分解。\", \".\", \".\"\n  ];\n\n  const commonFactorsCorrectText = [\n    \"你成功寫出兩數包含的所有質因數。\",\n    \"你成功写出两数包含的所有质因数。\",\n    \"You successfully write all the prime factors contained in the two numbers.\",\n    \"Vous écrivez avec succès tous les facteurs premiers contenus dans les deux nombres.\"\n  ];\n\n  const lcmHint = [\n    \"把上行所有的質因數乘起來。\",\n    \"把上行所有的质因数乘起来。\",\n    \"Multiply all the prime factors above.\",\n    \"Multipliez tous les facteurs premiers ci-dessus.\"\n  ];\n\n  const lcmCorrectText = [\n    \"做得好!你求得正確的L.C.M.。\",\n    \"做得好!你求得正确的L.C.M.。\",\n    \"Well done! You got the right L.C.M..\",\n    \"Bien joué! Vous avez le bon L.C.M..\"\n  ];\n\n  useEffect(() => {\n    setPrimeNumbers(getPrimeNumbers());\n    if (questions.length === 0) {\n      if (stageOrder === { stage: -1, order: 0 }) {\n        setInputIntegersArray([null, null]);\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      if (stageOrder === { stage: 0, order: 0 }) {\n        setQuestion(stageOrder.stage, stageOrder.order);\n      } else {\n        setStageOrder({ stage: 0, order: 0 });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowDivisionColomns(false);\n    setShowFactorsColomns(false);\n    setShowResult(false);\n    if (stageOrder.stage > -1) {\n      setQuestion(stageOrder.stage, stageOrder.order);\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }, [stageOrder]);\n\n  const handleStageClick = (stage) => {\n    setStageOrder({ stage: stage, order: 0 });\n  };\n\n  const setQuestion = (\n    stage,\n    order\n  ) => {\n    setInputIntegersArray(questions[stage][order])\n  };\n\n  useEffect(() => {\n    if (stageOrder.stage > -1 && inputIntegersArray[1] != null) {\n      okClick();\n    }\n  }, [inputIntegersArray])\n\n  function nextClick() {\n    if (stageOrder.stage > -1) {\n      if (\n        stageOrder.order <\n        questions[stageOrder.stage].length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage, order: stageOrder.order + 1 });\n      } else if (\n        stageOrder.stage <\n        questions.length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage + 1, order: 0 });\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }\n\n  const closeAlert = (e) => {\n    setOpenAlert(false);\n  };\n\n  const handleChange = (e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) => {\n    setOpenAlert(false);\n    if (focusedIndex == index || clickable) {\n      var tmpArray = [...inputsArray];\n      tmpArray[index] = parseInt(e.target.value);\n      setInputValue(tmpArray);\n      switch (groupType) {\n        case \"inputInteger\":\n          setShowDivisionColomns(false);\n          setShowFactorsColomns(false);\n          setShowResult(false);\n          break;\n        case \"firstFactor\":\n          checkAnswer(index, e.target.value, firstFactorsArray, setFirstArrayFocusedIndex, groupType, inputIntegersArray[0]);\n          break;\n        case \"secondFactor\":\n          checkAnswer(index, e.target.value, secondFactorsArray, setSecondArrayFocusedIndex, groupType, inputIntegersArray[1]);\n          break;\n        case \"commonFactor\":\n          checkAnswer(index, e.target.value, commonFactorsArray, setCommonArrayFocusedIndex, groupType);\n          break;\n        case \"lcm\":\n          checkAnswer(index, e.target.value, lcmResultArray, setLcmArrayFocusedIndex, groupType);\n          break;\n        case \"firstDivisor\":\n          checkDivisor(index, e.target.value, firstQuotientsArray[index], setFirstDivisorFocusedIndex);\n          break;\n        case \"secondDivisor\":\n          checkDivisor(index, e.target.value, secondQuotientsArray[index], setSecondDivisorFocusedIndex);\n          break;\n        case \"firstQuotient\":\n          checkQuotient(index, e.target.value, firstDivisorsArray, firstQuotientsArray, setFirstDivisorsArray, setFirstQuotientsArray, setFirstQuotientFocusedIndex, firstDivisorFocusedIndex);\n          break;\n        case \"secondQuotient\":\n          checkQuotient(index, e.target.value, secondDivisorsArray, secondQuotientsArray, setSecondDivisorsArray, setSecondQuotientsArray, setSecondQuotientFocusedIndex, secondDivisorFocusedIndex);\n          break;\n      }\n    }\n  };\n\n  function checkDivisor(index, value, quotient, setAnswerFocusedIndex) {\n    //correct divisor\n    if (quotient % value == 0) {\n      if (primeNumbers.includes(parseInt(value))) {\n        setTimeout(() => {\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }, timeDelay);\n      } else {\n        //not a prime factor\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(mustBeAPrimeText[languageIndex]);\n        }\n      }\n    } else {\n      //not a factor\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        setErrorMessage(mustBeAFactorTextLeft[languageIndex] + quotient + mustBeAFactorTextRight[languageIndex]);\n      }\n    }\n  }\n\n  function checkQuotient(index, value, divisorsArray, quotientsArray, setDivisorsArray, setQuotientsArray, setAnswerFocusedIndex, divisorIndex) {\n    if (divisorIndex == index && !primeNumbers.includes(quotientsArray[index - 1])) {\n      //correct quotient\n      if (value == quotientsArray[index - 1] / divisorsArray[index - 1]) {\n        setTimeout(() => {\n          var tmpDivisorsArray = [...divisorsArray];\n          var tmpQuotientsArray = [...quotientsArray];\n          tmpQuotientsArray[index] = parseInt(value);\n          tmpDivisorsArray.push(null);\n          tmpQuotientsArray.push(null);\n          setDivisorsArray(tmpDivisorsArray);\n          setQuotientsArray(tmpQuotientsArray);\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }, timeDelay);\n      } else {\n        //incorrect quotient\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(quotientsArray[index - 1] + \" ÷ \" + divisorsArray[index - 1] + \" = ?\");\n        }\n      }\n    }\n  }\n\n  function checkAnswer(index, value, factorsArray, setAnswerFocusedIndex, groupType, inputInteger) {\n    //correct factor\n    if (value == factorsArray[index]) {\n      if (groupType == \"lcm\") {\n        setErrorMessage(\"👍🏻\" + lcmCorrectText[languageIndex]);\n        setWholeCompleted(true);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n      } else if ([\"firstFactor\", \"secondFactor\", \"commonFactor\"].includes(groupType)) {\n        if (index == factorsArray.length - 1) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"success\");\n          setAnswerFocusedIndex(-1);\n          if (groupType == \"commonFactor\") {\n            setErrorMessage(\"👍🏻\" + commonFactorsCorrectText[languageIndex]);\n          } else {\n            setErrorMessage(\"👍🏻\" + factorsCorrectTextLeft[languageIndex] + inputInteger + factorsCorrectTextRight[languageIndex]);\n            if (numberOfArraysCorrect == numberOfArrays - 1) {\n              setShowResult(true);\n            } else {\n              setNumberOfArraysCorrect(numberOfArraysCorrect + 1);\n            }\n          }\n        } else {\n          setAnswerFocusedIndex(index + 1);\n          setTimeout(() => {\n            setOpenAlert(false);\n          }, timeDelay);\n        }\n      }\n      //incorrect factor\n    } else {\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        if (groupType == \"lcm\") {\n          setErrorMessage(lcmHint[languageIndex]);\n        } else if (groupType == \"commonFactor\") {\n          setErrorMessage(commonFactorHint[languageIndex]);\n        } else {\n          setErrorMessage(primeFactorHint[languageIndex]);\n        }\n      }\n    }\n  }\n\n  const completeClick = (e, quotient, setDivisionCompleted, anotherDivisionCompleted) => {\n    if (primeNumbers.includes(quotient)) {\n      setDivisionCompleted(true);\n      setErrorMessage(\"👍🏻\" + divisionCompletedText[languageIndex]);\n      setSeverity(\"success\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n      if (anotherDivisionCompleted) {\n        setShowFactorsColomns(true);\n      }\n    } else {\n      setErrorMessage(divisionIncompleteHint[languageIndex]);\n      setSeverity(\"error\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    }\n  };\n\n  const okClick = (e) => {\n    if (inputIntegersArray[0] != parseInt(inputIntegersArray[0]) || inputIntegersArray[1] != parseInt(inputIntegersArray[1])) {\n      setErrorMessage(mustBeIntegerMessages[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] < 1 || inputIntegersArray[0] > 99 || inputIntegersArray[1] < 1 || inputIntegersArray[1] > 99) {\n      setErrorMessage(mustBeInRangeMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] == inputIntegersArray[1]) {\n      setErrorMessage(mustBeDifferentMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else {\n      setOpenAlert(false);\n      setShowDivisionColomns(false);\n      setTimeout(() => {\n        setShowDivisionColomns(true);\n      }, timeDelay);\n      setFirstDivisorsArray([null, null]);\n      setFirstQuotientsArray([inputIntegersArray[0], null]);\n      setSecondDivisorsArray([null, null]);\n      setSecondQuotientsArray([inputIntegersArray[1], null]);\n      setFirstDivisorFocusedIndex(0);\n      setSecondDivisorFocusedIndex(0);\n      setFirstQuotientFocusedIndex(1);\n      setSecondQuotientFocusedIndex(1);\n      setFirstDivisionCompleted(false);\n      setSecondDivisionCompleted(false);\n      setShowFactorsColomns(false);\n      setFirstArrayFocusedIndex(0);\n      setSecondArrayFocusedIndex(0);\n      setNumberOfArraysCorrect(0);\n      setShowResult(false);\n      setCommonArrayFocusedIndex(0);\n      setLcmInputArray([null]);\n      setLcmArrayFocusedIndex(0);\n      setWholeCompleted(false);\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[0], primeNumbers);\n      setFirstFactorsArray(factorsArray);\n      setFirstInputsArray(inputsArray);\n      var factorsArray0 = factorsArray;\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[1], primeNumbers);\n      setSecondFactorsArray(factorsArray);\n      setSecondInputsArray(inputsArray);\n      var factorsArray1 = factorsArray;\n      var { factorsArray, inputsArray } = calculateResults(factorsArray0, factorsArray1);\n      setCommonFactorsArray(factorsArray);\n      setCommonInputsArray(inputsArray);\n      var tmpLcm = 1;\n      var i;\n      for (i = 0; i < factorsArray.length; i++) {\n        tmpLcm *= factorsArray[i];\n      }\n      setLcmResultArray([tmpLcm]);\n    }\n  };\n\n  const classes = pagesStyles();\n\n  return (\n    <MyFrame topic={topic} learningTool={learningTool}>\n      <Grid className={classes.spaceGrid} />\n      {questions.length > 0 && (\n        <StageButtons\n          stageText={stageText[languageIndex] + \"：\"}\n          stages={Object.keys(questions)}\n          handleStageClick={handleStageClick}\n          stageState={stageOrder.stage}\n          manual={manual[languageIndex]}\n        />\n      )}\n      <Grid className={classes.spaceGrid} />\n      <MyQuestion\n        questionTextLeft={questionTextLeft[languageIndex]}\n        setInputIntegersArray={setInputIntegersArray}\n        inputIntegerFocusedIndex={inputIntegerFocusedIndex}\n        inputIntegersArray={inputIntegersArray}\n        setInputIntegerFocusedIndex={setInputIntegerFocusedIndex}\n        handleChange={handleChange}\n        questionTextRight={questionTextRight[languageIndex]}\n        okClick={okClick}\n      />\n      <AlertSnackbar\n        open={openAlert}\n        closeAlert={closeAlert}\n        errorMessage={errorMessage}\n        severity={severity}\n      />\n      {\n        showDivisionColomns &&\n        <Grid container className={classes.centerRow}>\n          <Grid className={classes.divisionColomn}>\n            <Grid className={classes.divisionInsideColumn}>\n              {\n                firstDivisorsArray.map((divisor, index) => {\n                  return <Grid key={index} className={classes.divisionRow}>\n                    {\n                      ((index < firstDivisorsArray.length - 2) || ((index == firstDivisorsArray.length - 2) && !firstDivisionCompleted)) &&\n                      <Box\n                        border={0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setFirstDivisorsArray}\n                          focusedIndex={firstDivisorFocusedIndex}\n                          inputsArray={firstDivisorsArray}\n                          clickable={false}\n                          groupType=\"firstDivisor\"\n                          handleChange={handleChange}\n                          highlighted={firstDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                    {\n                      ((index < firstDivisorsArray.length - 1) || ((index == firstDivisorsArray.length - 1) && !firstDivisionCompleted)) &&\n                      <Box\n                        borderBottom={(index < firstDivisorsArray.length - 2) || (index == firstDivisorsArray.length - 2 && (!firstDivisionCompleted) || index == 0) ? 2 : 0}\n                        borderLeft={(index < firstDivisorsArray.length - 2) || (index == firstDivisorsArray.length - 2 && (!firstDivisionCompleted) || index == 0) ? 2 : 0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setFirstQuotientsArray}\n                          focusedIndex={firstQuotientFocusedIndex}\n                          inputsArray={firstQuotientsArray}\n                          clickable={false}\n                          groupType=\"firstQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == firstDivisorsArray.length - 2) && firstDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                  </Grid>\n                })\n              }\n            </Grid>\n            <Grid className={classes.centerRow}>\n              <Typography className={classes.commonText}>\n                {quotientIsAPrimeQuestionLeft[languageIndex]}\n                {firstQuotientsArray[firstQuotientFocusedIndex - 1]}\n                {quotientIsAPrimeQuestionRight[languageIndex]}\n              </Typography>\n              <Button\n                className={classes.completeButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => { completeClick(e, firstQuotientsArray[firstQuotientFocusedIndex - 1], setFirstDivisionCompleted, secondDivisionCompleted) }}\n              >\n                {completeButtonText[languageIndex]}\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid className={classes.divisionColomn}>\n            <Grid className={classes.divisionInsideColumn}>\n              {\n                secondDivisorsArray.map((divisor, index) => {\n                  return <Grid key={index} className={classes.divisionRow}>\n                    {\n                      ((index < secondDivisorsArray.length - 2) || ((index == secondDivisorsArray.length - 2) && !secondDivisionCompleted)) &&\n                      <Box\n                        border={0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setSecondDivisorsArray}\n                          focusedIndex={secondDivisorFocusedIndex}\n                          inputsArray={secondDivisorsArray}\n                          clickable={false}\n                          groupType=\"secondDivisor\"\n                          handleChange={handleChange}\n                          highlighted={secondDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                    {\n                      ((index < secondDivisorsArray.length - 1) || ((index == secondDivisorsArray.length - 1) && !secondDivisionCompleted)) &&\n                      <Box\n                        borderBottom={(index < secondDivisorsArray.length - 2) || (index == secondDivisorsArray.length - 2 && (!secondDivisionCompleted) || index == 0) ? 2 : 0}\n                        borderLeft={(index < secondDivisorsArray.length - 2) || (index == secondDivisorsArray.length - 2 && (!secondDivisionCompleted) || index == 0) ? 2 : 0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setSecondQuotientsArray}\n                          focusedIndex={secondQuotientFocusedIndex}\n                          inputsArray={secondQuotientsArray}\n                          clickable={false}\n                          groupType=\"secondQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == secondDivisorsArray.length - 2) && secondDivisionCompleted}\n                        />\n                      </Box>\n                    }\n                  </Grid>\n                })\n              }\n            </Grid>\n            <Grid className={classes.centerRow}>\n              <Typography className={classes.commonText}>\n                {quotientIsAPrimeQuestionLeft[languageIndex]}\n                {secondQuotientsArray[secondQuotientFocusedIndex - 1]}\n                {quotientIsAPrimeQuestionRight[languageIndex]}\n              </Typography>\n              <Button\n                className={classes.completeButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => { completeClick(e, secondQuotientsArray[secondQuotientFocusedIndex - 1], setSecondDivisionCompleted, firstDivisionCompleted) }}\n              >\n                {completeButtonText[languageIndex]}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showFactorsColomns && <Grid>\n          <Grid className={classes.centerRow}>\n            <Grid container className={classes.factorsRows}>\n              <Typography className={classes.commonText}>\n                {factorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]}&nbsp;{factorTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                firstInputsArray.map((factor, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                    <MyInput\n                      index={index}\n                      setInputValue={setFirstInputsArray}\n                      focusedIndex={firstArrayFocusedIndex}\n                      inputsArray={firstInputsArray}\n                      clickable={false}\n                      groupType=\"firstFactor\"\n                      handleChange={handleChange}\n                    />\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n          <Grid className={classes.centerRow}>\n            <Grid container className={classes.factorsRows}>\n              <Typography className={classes.commonText}>\n                {factorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[1]}&nbsp;{factorTextRight[languageIndex]}&nbsp;:\n              </Typography>\n              {\n                secondInputsArray.map((factor, index) => {\n                  return <Grid key={index} style={{ display: \"flex\" }}>\n                    {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                    <MyInput\n                      index={index}\n                      setInputValue={setSecondInputsArray}\n                      focusedIndex={secondArrayFocusedIndex}\n                      inputsArray={secondInputsArray}\n                      clickable={false}\n                      groupType=\"secondFactor\"\n                      handleChange={handleChange}\n                    />\n                  </Grid>\n                })\n              }\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showResult && <Grid >\n          <Grid className={classes.centerRow}>\n            <Grid className={classes.factorsRows}>\n              <Paper >\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {commonFactorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{commonFactorTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  {\n                    commonInputsArray.map((factor, index) => {\n                      return <Grid key={index} style={{ display: \"flex\" }}>\n                        {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                        <MyInput\n                          index={index}\n                          setInputValue={setCommonInputsArray}\n                          focusedIndex={commonArrayFocusedIndex}\n                          inputsArray={commonInputsArray}\n                          clickable={false}\n                          groupType=\"commonFactor\"\n                          handleChange={handleChange}\n                        />\n                      </Grid>\n                    })\n                  }\n                </Grid>\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {questionTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{questionTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  <MyInput\n                    index={0}\n                    setInputValue={setLcmInputArray}\n                    focusedIndex={lcmArrayFocusedIndex}\n                    inputsArray={lcmInputArray}\n                    clickable={false}\n                    groupType=\"lcm\"\n                    handleChange={handleChange}\n                  />\n                  {\n                    wholeCompleted && <Button\n                      className={classes.okButton}\n                      variant=\"contained\"\n                      onClick={nextClick}\n                      color=\"primary\"\n                    ><ForwardRoundedIcon className={classes.resetArrow} /></Button>\n                  }\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </MyFrame>\n  );\n}\n","export function calculateResults(getFirstFactorsArray, getSecondFactorsArray) {\n  var factorsArray = [];\n  var inputsArray = [];\n  var firstArrayIndex = 0;\n  var secondArrayIndex = 0;\n  var i;\n  for (i = 0; i < getFirstFactorsArray.length + getSecondFactorsArray.length; i++) {\n    if (getFirstFactorsArray[firstArrayIndex] == getSecondFactorsArray[secondArrayIndex]) {\n      factorsArray.push(getFirstFactorsArray[firstArrayIndex]);\n      inputsArray.push(null);\n      firstArrayIndex += 1;\n      secondArrayIndex += 1;\n    } else if (getFirstFactorsArray[firstArrayIndex] > getSecondFactorsArray[secondArrayIndex]) {\n      factorsArray.push(getSecondFactorsArray[secondArrayIndex]);\n      inputsArray.push(null);\n      secondArrayIndex += 1;\n    } else if (getFirstFactorsArray[firstArrayIndex] < getSecondFactorsArray[secondArrayIndex]) {\n      factorsArray.push(getFirstFactorsArray[firstArrayIndex]);\n      inputsArray.push(null);\n      firstArrayIndex += 1;\n    }\n    if (firstArrayIndex == getFirstFactorsArray.length && secondArrayIndex == getSecondFactorsArray.length) {\n      i = getFirstFactorsArray.length + getSecondFactorsArray.length;\n    } else if (firstArrayIndex == getFirstFactorsArray.length) {\n      var j;\n      for (j = secondArrayIndex; j < getSecondFactorsArray.length; j++) {\n        factorsArray.push(getSecondFactorsArray[j]);\n        inputsArray.push(null);\n      }\n      i = getFirstFactorsArray.length + getSecondFactorsArray.length;\n    } else if (secondArrayIndex == getSecondFactorsArray.length) {\n      var j;\n      for (j = firstArrayIndex; j < getFirstFactorsArray.length; j++) {\n        factorsArray.push(getFirstFactorsArray[j]);\n        inputsArray.push(null);\n      }\n      i = getFirstFactorsArray.length + getSecondFactorsArray.length;\n    }\n  }\n  return { factorsArray, inputsArray };\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport { MyInput } from \"../components/InputComponents\";\nimport { AlertSnackbar } from \"../components/AlertComponents\";\nimport { MyFrame } from \"../components/HeadingComponents\";\nimport { MyQuestion } from \"../components/QuestionComponents\";\nimport { StageButtons } from \"../components/StageComponents\";\nimport questions from \"../questions/Questions\";\nimport { calculateFactors, calculateResults } from \"../functions/HCFPrimeFunctions\";\nimport { getPrimeNumbers } from \"../functions/PrimeNumbersFunctions\";\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport { pagesStyles } from \"../themes/styles\";\n\n//×÷👍👍🏻\nexport const HCFDivision = ({ languageIndex, topic, learningTool }) => {\n  const [inputIntegersArray, setInputIntegersArray] = useState([null, null]);\n  const [inputIntegerFocusedIndex, setInputIntegerFocusedIndex] = useState(0);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDivisionColomns, setShowDivisionColomns] = useState(false);\n  const [divisorsArray, setDivisorsArray] = useState([]);\n  const [firstQuotientsArray, setFirstQuotientsArray] = useState([]);\n  const [secondQuotientsArray, setSecondQuotientsArray] = useState([]);\n  const [divisorFocusedIndex, setDivisorFocusedIndex] = useState(0);\n  const [firstQuotientFocusedIndex, setFirstQuotientFocusedIndex] = useState(0);\n  const [secondQuotientFocusedIndex, setSecondQuotientFocusedIndex] = useState(0);\n  const [numberOfQuotientCorrect, setNumberOfQuotientCorrect] = useState(0);\n  const [divisionCompleted, setDivisionCompleted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [severity, setSeverity] = useState(\"error\");\n  const [commonFactorsArray, setCommonFactorsArray] = useState([]);\n  const [commonInputsArray, setCommonInputsArray] = useState([]);\n  const [commonArrayFocusedIndex, setCommonArrayFocusedIndex] = useState(0);\n  const [hcfResultArray, setHcfResultArray] = useState([null]);\n  const [hcfInputArray, setHcfInputArray] = useState([null]);\n  const [hcfArrayFocusedIndex, setHcfArrayFocusedIndex] = useState(0);\n  const [primeNumbers, setPrimeNumbers] = useState([]);\n  const [wholeCompleted, setWholeCompleted] = useState(false);\n  const [stageOrder, setStageOrder] = useState({ stage: 0, order: 0 });\n  const timeDelay = 200;\n\n  const stageText = [\"階段\", \"阶段\", \"Stage\", \"Étape\"];\n  const manual = [\"自擬題目\", \"自拟题目\", \"Personal Task\", \"Tâche personnelle\"];\n\n  const mustBeIntegerMessages = [\n    \"輸入的數必須是整數。\",\n    \"输入的数必须是整数。\",\n    \"The inputted numbers should be integers.\",\n    \"Les nombres entrés doivent être des entiers.\"\n  ];\n\n  const mustBeInRangeMessage = [\n    \"輸入的數必須在1至99以內。\",\n    \"输入的数必须在1至99以内。\",\n    \"The inputted numbers should be in the range of 1 and 99.\",\n    \"Les nombres saisis doivent être compris entre 1 et 99.\"\n  ];\n\n  const mustBeDifferentMessage = [\n    \"兩數必須不相同。\",\n    \"两数必须不相同。\",\n    \"The two integers should not be the same.\",\n    \"Les deux nombres entiers ne devraient pas être identiques.\"\n  ];\n\n  const questionTextLeft = [\n    \"\", \"\", \"H.C.F./G.C.F.(Highest/Greatest Common Factor) of \", \"H.C.F./G.C.F.(Facteur commun le plus élevé / le plus grand) sur \"\n  ];\n\n  const questionTextRight = [\n    \"的H.C.F./G.C.F.(最大公因數)\", \"的H.C.F./G.C.F.(最大公因数)\", \"\", \"\"\n  ];\n\n  const mustBeAPrimeText = [\n    \"進行質因數分解時，你需要運用質數，例如2,3,5,7,...。\",\n    \"进行质因数分解时，你需要运用质数，例如2,3,5,7,...。\",\n    \"When performing prime factorization, you need to use prime numbers, such as 2,3,5,7,....\",\n    \"Lors de la factorisation des nombres premiers, vous devez utiliser des nombres premiers, tels que 2,3,5,7, ....\"\n  ];\n\n  const mustBeAFactorTextLeft = [\n    \"這數必須是\", \"这数必须是\", \"This number must be a factor of \", \"Ce nombre doit être un facteur de \"\n  ];\n\n  const mustBeAFactorTextRight = [\n    \"的因數。\", \"的因数。\", \".\", \".\"\n  ];\n\n  const quotientIsAPrimeQuestionLeft = [\n    \"如果再找不到任何質數來整除\",\n    \"如果再找不到任何质数来整除\",\n    \"If you can't find any prime numbers to divide \",\n    \"Si vous ne trouvez pas de nombres premiers à diviser \"\n  ];\n\n  const quotientIsAPrimeQuestionRight = [\n    \"，請按\", \"，请按\", \", please press \", \", veuillez appuyer sur \"\n  ];\n\n  const completeButtonText = [\n    \"完成\", \"完成\", \"Completed\", \"Terminé\"\n  ];\n\n  const divisionCompletedText = [\n    \"這兩數是互質，已不能再同時被一個質數整除。你完成這質因數分解的短除。\",\n    \"这两数是互质，已不能再同时被一个质数整除。你完成这质因数分解的短除。\",\n    \"These two numbers are relatively prime and can no longer be divisible by a prime number at the same time. You completed this short division of prime factorization.\",\n    \"Ces deux nombres sont relativement premiers et ne peuvent plus être divisibles par un nombre premier en même temps. Vous avez terminé cette courte division de la factorisation des nombres premiers.\"\n  ];\n\n  const divisionIncompleteHint = [\n    \"這兩數仍可被一些質數同時整除。\",\n    \"这两数仍可被一些质数同时整除。\",\n    \"These two numbers are still divisible by some prime numbers at the same time.\",\n    \"Ces deux nombres sont toujours divisibles par quelques nombres premiers en même temps.\"\n  ];\n\n  const commonFactorTextLeft = [\n    \"\", \"\", \"Common factors of \", \"Facteurs communs de \"\n  ];\n\n  const commonFactorTextRight = [\n    \"的共有因數\", \"的共有因数\", \"\", \"\"\n  ];\n\n  const commonFactorHint = [\n    \"由小至大找出共有的質因數(黃色方格)。\",\n    \"由小至大找出共有的质因数(黃色方格)。\",\n    \"Find the common prime factors (yellow blocks) from small to large.\",\n    \"Trouvez les facteurs premiers communs (blocs jaunes) de petit à grand.\"\n  ];\n\n  const tryText = [\n    \"嘗試 \", \"尝试 \", \"Try \", \"Essayer \"\n  ];\n\n  const commonFactorsCorrectText = [\n    \"你成功寫出共有的質因數。\",\n    \"你成功写出共有的质因数。\",\n    \"You successfully write the common prime factors.\",\n    \"Vous écrivez avec succès les facteurs premiers communs.\"\n  ];\n\n  const hcfHint = [\n    \"把上行共有的質因數乘起來。\",\n    \"把上行共有的质因数乘起来。\",\n    \"Multiply all the common prime factors above.\",\n    \"Multipliez tous les facteurs premiers communs ci-dessus.\"\n  ];\n\n  const hcfOneHint = [\n    \"這H.C.F.比所有質數(2,3,5,7,...)小，不能從短除的結果中找出來。\",\n    \"这H.C.F.比所有质数(2,3,5,7,...)小，不能从短除的结果中找出来。\",\n    \"This H.C.F. is smaller than all prime numbers (2,3,5,7,...) and cannot be found from the result of short division.\",\n    \"Ce H.C.F.est plus petit que tous les nombres premiers (2,3,5,7, ...) et ne peut être trouvé à partir du résultat d'une division courte.\"\n  ];\n\n  const hcfCorrectText = [\n    \"做得好!你求得正確的H.C.F.。\",\n    \"做得好!你求得正确的H.C.F.。\",\n    \"Well done! You got the right H.C.F..\",\n    \"Bien joué! Vous avez le bon H.C.F..\"\n  ];\n\n  useEffect(() => {\n    setPrimeNumbers(getPrimeNumbers());\n    if (questions.length === 0) {\n      if (stageOrder === { stage: -1, order: 0 }) {\n        setInputIntegersArray([null, null]);\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      if (stageOrder === { stage: 0, order: 0 }) {\n        setQuestion(stageOrder.stage, stageOrder.order);\n      } else {\n        setStageOrder({ stage: 0, order: 0 });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowDivisionColomns(false);\n    setShowResult(false);\n    if (stageOrder.stage > -1) {\n      setQuestion(stageOrder.stage, stageOrder.order);\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }, [stageOrder]);\n\n  const handleStageClick = (stage) => {\n    setStageOrder({ stage: stage, order: 0 });\n  };\n\n  const setQuestion = (\n    stage,\n    order\n  ) => {\n    setInputIntegersArray(questions[stage][order])\n  };\n\n  useEffect(() => {\n    if (stageOrder.stage > -1 && inputIntegersArray[1] != null) {\n      okClick();\n    }\n  }, [inputIntegersArray])\n\n  function nextClick() {\n    if (stageOrder.stage > -1) {\n      if (\n        stageOrder.order <\n        questions[stageOrder.stage].length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage, order: stageOrder.order + 1 });\n      } else if (\n        stageOrder.stage <\n        questions.length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage + 1, order: 0 });\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }\n\n  const closeAlert = (e) => {\n    setOpenAlert(false);\n  };\n\n  const handleChange = (e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) => {\n    setOpenAlert(false);\n    if (focusedIndex == index || clickable) {\n      var tmpArray = [...inputsArray];\n      tmpArray[index] = parseInt(e.target.value);\n      setInputValue(tmpArray);\n      switch (groupType) {\n        case \"inputInteger\":\n          setShowDivisionColomns(false);\n          setShowResult(false);\n          break;\n        case \"commonFactor\":\n          checkAnswer(index, e.target.value, commonFactorsArray, setCommonArrayFocusedIndex, groupType);\n          break;\n        case \"hcf\":\n          checkAnswer(index, e.target.value, hcfResultArray, setHcfArrayFocusedIndex, groupType);\n          break;\n        case \"divisor\":\n          checkDivisor(index, e.target.value, firstQuotientsArray[index], secondQuotientsArray[index], setDivisorFocusedIndex);\n          break;\n        case \"firstQuotient\":\n          checkQuotient(index, e.target.value, divisorsArray, firstQuotientsArray, setDivisorsArray, setFirstQuotientsArray, setFirstQuotientFocusedIndex, secondQuotientsArray, setSecondQuotientsArray, setSecondQuotientFocusedIndex);\n          break;\n        case \"secondQuotient\":\n          checkQuotient(index, e.target.value, divisorsArray, secondQuotientsArray, setDivisorsArray, setSecondQuotientsArray, setSecondQuotientFocusedIndex, firstQuotientsArray, setFirstQuotientsArray, setFirstQuotientFocusedIndex);\n          break;\n      }\n    }\n  };\n\n  function checkDivisor(index, value, firstQuotient, secondQuotient, setAnswerFocusedIndex) {\n    //correct divisor\n    if (firstQuotient % value == 0 && secondQuotient % value == 0) {\n      if (primeNumbers.includes(parseInt(value))) {\n        setTimeout(() => {\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }, 50);\n      } else {\n        //not a prime factor\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(mustBeAPrimeText[languageIndex]);\n        }\n      }\n    } else {\n      //not a factor\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        setErrorMessage(mustBeAFactorTextLeft[languageIndex] + firstQuotient + \",\" + secondQuotient + mustBeAFactorTextRight[languageIndex]);\n      }\n    }\n  }\n\n  function checkQuotient(index, value, divisorsArray, quotientsArray, setDivisorsArray, setQuotientsArray, setAnswerFocusedIndex, anotherQuotientsArray, setAnotherQuotientsArray, setAnotherQuotientFocusedIndex) {\n    if (divisorFocusedIndex == index) {\n      //correct quotient\n      setTimeout(() => {\n        setOpenAlert(false);\n      }, timeDelay);\n      if (value == quotientsArray[index - 1] / divisorsArray[index - 1] && divisorsArray[index - 1] != 1) {\n        if (numberOfQuotientCorrect == 0) {\n          setNumberOfQuotientCorrect(1);\n          setAnswerFocusedIndex(index + 1);\n        } else {\n          setTimeout(() => {\n            var tmpDivisorsArray = [...divisorsArray];\n            var tmpQuotientsArray = [...quotientsArray];\n            var tmpAnotherQuotientsArray = [...anotherQuotientsArray];\n            tmpQuotientsArray[index] = parseInt(value);\n            tmpDivisorsArray.push(null);\n            tmpQuotientsArray.push(null);\n            tmpAnotherQuotientsArray.push(null);\n            setDivisorsArray(tmpDivisorsArray);\n            setQuotientsArray(tmpQuotientsArray);\n            setAnotherQuotientsArray(tmpAnotherQuotientsArray);\n            setAnswerFocusedIndex(index + 1);\n            setAnotherQuotientFocusedIndex(index + 1);\n            setNumberOfQuotientCorrect(0);\n          }, 50);\n        }\n      } else {\n        //incorrect quotient\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(quotientsArray[index - 1] + \" ÷ \" + divisorsArray[index - 1] + \" = ?\");\n        }\n      }\n    }\n  }\n\n  function checkAnswer(index, value, factorsArray, setAnswerFocusedIndex, groupType) {\n    //correct factor\n    if (value == factorsArray[index]) {\n      if (groupType == \"hcf\") {\n        setErrorMessage(\"👍🏻\" + hcfCorrectText[languageIndex]);\n        setWholeCompleted(true);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n      } else if (index == factorsArray.length - 1) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n        setErrorMessage(\"👍🏻\" + commonFactorsCorrectText[languageIndex]);\n      } else {\n        setAnswerFocusedIndex(index + 1);\n        setTimeout(() => {\n          setOpenAlert(false);\n        }, timeDelay);\n      }\n      //incorrect factor\n    } else {\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        if (groupType == \"hcf\") {\n          if (hcfResultArray[0] == 1) {\n            setErrorMessage(hcfOneHint[languageIndex]);\n          } else {\n            setErrorMessage(hcfHint[languageIndex]);\n          }\n        } else if (groupType == \"commonFactor\") {\n          if (hcfResultArray[0] == 1) {\n            setErrorMessage(hcfOneHint[languageIndex]);\n          } else {\n            setErrorMessage(commonFactorHint[languageIndex]);\n          }\n        }\n      }\n    }\n  }\n\n  const completeClick = (e, firstQuotient, secondQuotient) => {\n    if (inputIntegersArray[0] == firstQuotient * hcfResultArray[0] && inputIntegersArray[1] == secondQuotient * hcfResultArray[0]) {\n      setDivisionCompleted(true);\n      setErrorMessage(\"👍🏻\" + divisionCompletedText[languageIndex]);\n      setSeverity(\"success\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n      setShowResult(true);\n    } else {\n      setErrorMessage(divisionIncompleteHint[languageIndex]);\n      setSeverity(\"error\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    }\n  };\n\n  const okClick = (e) => {\n    if (inputIntegersArray[0] != parseInt(inputIntegersArray[0]) || inputIntegersArray[1] != parseInt(inputIntegersArray[1])) {\n      setErrorMessage(mustBeIntegerMessages[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] < 1 || inputIntegersArray[0] > 99 || inputIntegersArray[1] < 1 || inputIntegersArray[1] > 99) {\n      setErrorMessage(mustBeInRangeMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] == inputIntegersArray[1]) {\n      setErrorMessage(mustBeDifferentMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else {\n      okReset();\n    }\n  };\n\n  function okReset() {\n    setOpenAlert(false);\n    setShowDivisionColomns(false);\n    setTimeout(() => {\n      setShowDivisionColomns(true);\n    }, timeDelay);\n    setDivisorsArray([null, null]);\n    setFirstQuotientsArray([inputIntegersArray[0], null]);\n    setSecondQuotientsArray([inputIntegersArray[1], null]);\n    setDivisorFocusedIndex(0);\n    setFirstQuotientFocusedIndex(1);\n    setSecondQuotientFocusedIndex(1);\n    setNumberOfQuotientCorrect(0);\n    setDivisionCompleted(false);\n    setShowResult(false);\n    setCommonArrayFocusedIndex(0);\n    setHcfInputArray([null]);\n    setHcfArrayFocusedIndex(0);\n    setWholeCompleted(false);\n    var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[0], primeNumbers);\n    var factorsArray0 = factorsArray;\n    var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[1], primeNumbers);\n    var factorsArray1 = factorsArray;\n    var { factorsArray, inputsArray } = calculateResults(factorsArray0, factorsArray1);\n    setCommonFactorsArray(factorsArray);\n    setCommonInputsArray(inputsArray);\n    var tmpHcf = 1;\n    var i;\n    for (i = 0; i < factorsArray.length; i++) {\n      tmpHcf *= factorsArray[i];\n    }\n    setHcfResultArray([tmpHcf]);\n  };\n\n  const classes = pagesStyles();\n\n  return (\n    <MyFrame topic={topic} learningTool={learningTool}>\n      <Grid className={classes.spaceGrid} />\n      {questions.length > 0 && (\n        <StageButtons\n          stageText={stageText[languageIndex] + \"：\"}\n          stages={Object.keys(questions)}\n          handleStageClick={handleStageClick}\n          stageState={stageOrder.stage}\n          manual={manual[languageIndex]}\n        />\n      )}\n      <Grid className={classes.spaceGrid} />\n      <MyQuestion\n        questionTextLeft={questionTextLeft[languageIndex]}\n        setInputIntegersArray={setInputIntegersArray}\n        inputIntegerFocusedIndex={inputIntegerFocusedIndex}\n        inputIntegersArray={inputIntegersArray}\n        setInputIntegerFocusedIndex={setInputIntegerFocusedIndex}\n        handleChange={handleChange}\n        questionTextRight={questionTextRight[languageIndex]}\n        okClick={okClick}\n      />\n      <AlertSnackbar\n        open={openAlert}\n        closeAlert={closeAlert}\n        errorMessage={errorMessage}\n        severity={severity}\n      />\n      {\n        showDivisionColomns &&\n        <Grid className={classes.centerRow}>\n          <Grid className={classes.divisionColomn}>\n            <Grid className={classes.divisionInsideWideColumn}>\n              {\n                divisorsArray.map((divisor, index) => {\n                  return <Grid key={index} className={classes.divisionRow}>\n                    {\n                      ((index < divisorsArray.length - 2) || ((index == divisorsArray.length - 2) && !divisionCompleted)) &&\n                      <Box\n                        border={0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setDivisorsArray}\n                          focusedIndex={divisorFocusedIndex}\n                          inputsArray={divisorsArray}\n                          clickable={false}\n                          groupType=\"divisor\"\n                          handleChange={handleChange}\n                          highlighted={divisionCompleted}\n                        />\n                      </Box>\n                    }\n                    {\n                      ((index < divisorsArray.length - 1) || ((index == divisorsArray.length - 1) && !divisionCompleted)) &&\n                      <Box\n                        borderBottom={(index < divisorsArray.length - 2) || (index == divisorsArray.length - 2 && (!divisionCompleted) || index == 0) ? 2 : 0}\n                        borderLeft={(index < divisorsArray.length - 2) || (index == divisorsArray.length - 2 && (!divisionCompleted) || index == 0) ? 2 : 0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setFirstQuotientsArray}\n                          focusedIndex={firstQuotientFocusedIndex}\n                          inputsArray={firstQuotientsArray}\n                          clickable={false}\n                          groupType=\"firstQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == divisorsArray.length - 2) && divisionCompleted && false}\n                        />\n                        <MyInput\n                          index={index}\n                          setInputValue={setSecondQuotientsArray}\n                          focusedIndex={secondQuotientFocusedIndex}\n                          inputsArray={secondQuotientsArray}\n                          clickable={false}\n                          groupType=\"secondQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == divisorsArray.length - 2) && divisionCompleted && false}\n                        />\n                      </Box>\n                    }\n                  </Grid>\n                })\n              }\n            </Grid>\n            <Grid className={classes.centerRow}>\n              <Typography className={classes.commonText}>\n                {quotientIsAPrimeQuestionLeft[languageIndex]}\n                {firstQuotientsArray[firstQuotientFocusedIndex - 1]},&nbsp;{secondQuotientsArray[secondQuotientFocusedIndex - 1]}\n                {quotientIsAPrimeQuestionRight[languageIndex]}\n              </Typography>\n              <Button\n                className={classes.completeButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => { completeClick(e, firstQuotientsArray[firstQuotientFocusedIndex - 1], secondQuotientsArray[secondQuotientFocusedIndex - 1]) }}\n              >\n                {completeButtonText[languageIndex]}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showResult && <Grid >\n          <Grid className={classes.centerRow}>\n            <Grid className={classes.factorsRows}>\n              <Paper >\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {commonFactorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{commonFactorTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  {\n                    commonInputsArray.map((factor, index) => {\n                      return <Grid key={index} style={{ display: \"flex\" }}>\n                        {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                        <MyInput\n                          index={index}\n                          setInputValue={setCommonInputsArray}\n                          focusedIndex={commonArrayFocusedIndex}\n                          inputsArray={commonInputsArray}\n                          clickable={false}\n                          groupType=\"commonFactor\"\n                          handleChange={handleChange}\n                        />\n                      </Grid>\n                    })\n                  }\n                </Grid>\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {questionTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{questionTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  <MyInput\n                    index={0}\n                    setInputValue={setHcfInputArray}\n                    focusedIndex={hcfArrayFocusedIndex}\n                    inputsArray={hcfInputArray}\n                    clickable={false}\n                    groupType=\"hcf\"\n                    handleChange={handleChange}\n                  />\n                  {\n                    wholeCompleted && <Button\n                      className={classes.okButton}\n                      variant=\"contained\"\n                      onClick={nextClick}\n                      color=\"primary\"\n                    ><ForwardRoundedIcon className={classes.resetArrow} /></Button>\n                  }\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </MyFrame>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport { MyInput } from \"../components/InputComponents\";\nimport { AlertSnackbar } from \"../components/AlertComponents\";\nimport { MyFrame } from \"../components/HeadingComponents\";\nimport { MyQuestion } from \"../components/QuestionComponents\";\nimport { StageButtons } from \"../components/StageComponents\";\nimport questions from \"../questions/Questions\";\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\nimport { calculateFactors, calculateResults } from \"../functions/HCFPrimeFunctions\";\nimport { getPrimeNumbers } from \"../functions/PrimeNumbersFunctions\";\nimport { pagesStyles } from \"../themes/styles\";\n\n//×÷👍👍🏻\nexport const LCMDivision = ({ languageIndex, topic, learningTool }) => {\n  const [inputIntegersArray, setInputIntegersArray] = useState([null, null]);\n  const [inputIntegerFocusedIndex, setInputIntegerFocusedIndex] = useState(0);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDivisionColomns, setShowDivisionColomns] = useState(false);\n  const [divisorsArray, setDivisorsArray] = useState([]);\n  const [firstQuotientsArray, setFirstQuotientsArray] = useState([]);\n  const [secondQuotientsArray, setSecondQuotientsArray] = useState([]);\n  const [divisorFocusedIndex, setDivisorFocusedIndex] = useState(0);\n  const [firstQuotientFocusedIndex, setFirstQuotientFocusedIndex] = useState(0);\n  const [secondQuotientFocusedIndex, setSecondQuotientFocusedIndex] = useState(0);\n  const [numberOfQuotientCorrect, setNumberOfQuotientCorrect] = useState(0);\n  const [divisionCompleted, setDivisionCompleted] = useState(false);\n  const [showResult, setShowResult] = useState(false);\n  const [severity, setSeverity] = useState(\"error\");\n  const [commonFactorsArray, setCommonFactorsArray] = useState([]);\n  const [commonInputsArray, setCommonInputsArray] = useState([]);\n  const [commonArrayFocusedIndex, setCommonArrayFocusedIndex] = useState(0);\n  const [lcmResultArray, setLcmResultArray] = useState([null]);\n  const [lcmInputArray, setLcmInputArray] = useState([null]);\n  const [lcmArrayFocusedIndex, setLcmArrayFocusedIndex] = useState(0);\n  const [primeNumbers, setPrimeNumbers] = useState([]);\n  const [wholeCompleted, setWholeCompleted] = useState(false);\n  const [stageOrder, setStageOrder] = useState({ stage: 0, order: 0 });\n  const timeDelay = 200;\n\n  const stageText = [\"階段\", \"阶段\", \"Stage\", \"Étape\"];\n  const manual = [\"自擬題目\", \"自拟题目\", \"Personal Task\", \"Tâche personnelle\"];\n\n  const mustBeIntegerMessages = [\n    \"輸入的數必須是整數。\",\n    \"输入的数必须是整数。\",\n    \"The inputted numbers should be integers.\",\n    \"Les nombres entrés doivent être des entiers.\"\n  ];\n\n  const mustBeInRangeMessage = [\n    \"輸入的數必須在1至99以內。\",\n    \"输入的数必须在1至99以内。\",\n    \"The inputted numbers should be in the range of 1 and 99.\",\n    \"Les nombres saisis doivent être compris entre 1 et 99.\"\n  ];\n\n  const mustBeDifferentMessage = [\n    \"兩數必須不相同。\",\n    \"两数必须不相同。\",\n    \"The two integers should not be the same.\",\n    \"Les deux nombres entiers ne devraient pas être identiques.\"\n  ];\n\n  const questionTextLeft = [\n    \"\", \"\", \"L.C.M.(Highest/Greatest Common Factor) of \", \"L.C.M.(Facteur commun le plus élevé / le plus grand) sur \"\n  ];\n\n  const questionTextRight = [\n    \"的L.C.M.(最大公因數)\", \"的L.C.M.(最大公因数)\", \"\", \"\"\n  ];\n\n  const mustBeAPrimeText = [\n    \"進行質因數分解時，你需要運用質數，例如2,3,5,7,...。\",\n    \"进行质因数分解时，你需要运用质数，例如2,3,5,7,...。\",\n    \"When performing prime factorization, you need to use prime numbers, such as 2,3,5,7,....\",\n    \"Lors de la factorisation des nombres premiers, vous devez utiliser des nombres premiers, tels que 2,3,5,7,....\"\n  ];\n\n  const mustBeAFactorTextLeft = [\n    \"這數必須是\", \"这数必须是\", \"This number must be a factor of \", \"Ce nombre doit être un facteur de \"\n  ];\n\n  const mustBeAFactorTextRight = [\n    \"的因數。\", \"的因数。\", \".\", \".\"\n  ];\n\n  const quotientIsAPrimeQuestionLeft = [\n    \"如果再找不到任何質數來整除\",\n    \"如果再找不到任何质数来整除\",\n    \"If you can't find any prime numbers to divide \",\n    \"Si vous ne trouvez pas de nombres premiers à diviser \"\n  ];\n\n  const quotientIsAPrimeQuestionRight = [\n    \"，請按\", \"，请按\", \", please press \", \", veuillez appuyer sur \"\n  ];\n\n  const completeButtonText = [\n    \"完成\", \"完成\", \"Completed\", \"Terminé\"\n  ];\n\n  const divisionCompletedText = [\n    \"這兩數是互質，已不能再同時被一個質數整除。你完成這質因數分解的短除。\",\n    \"这两数是互质，已不能再同时被一个质数整除。你完成这质因数分解的短除。\",\n    \"These two numbers are relatively prime and can no longer be divisible by a prime number at the same time. You completed this short division of prime factorization.\",\n    \"Ces deux nombres sont relativement premiers et ne peuvent plus être divisibles par un nombre premier en même temps. Vous avez terminé cette courte division de la factorisation des nombres premiers.\"\n  ];\n\n  const divisionIncompleteHint = [\n    \"這兩數仍可被一些質數同時整除。\",\n    \"这两数仍可被一些质数同时整除。\",\n    \"These two numbers are still divisible by some prime numbers at the same time.\",\n    \"Ces deux nombres sont toujours divisibles par quelques nombres premiers en même temps.\"\n  ];\n\n  const commonFactorTextLeft = [\n    \"綜合\", \"綜合\", \"Combining all factors of \", \"Combinant tous les facteurs de \"\n  ];\n\n  const commonFactorTextRight = [\n    \"的所有因數\", \"的所有因数\", \"\", \"\"\n  ];\n\n  const commonFactorHint = [\n    \"由小至大寫出兩數的所有因數(黃色方格)。\",\n    \"由小至大写出两数的所有因数(黄色方格)。\",\n    \"Write all the factors of the two numbers from small to large (yellow blocks).\",\n    \"Écrivez tous les facteurs des deux nombres de petit à grand (blocs jaunes).\"\n  ];\n\n  const tryText = [\n    \"嘗試 \", \"尝试 \", \"Try \", \"Essayer \"\n  ];\n\n  const commonFactorsCorrectText = [\n    \"你成功寫出兩數的所有因數\",\n    \"你成功写出两数的所有因数\",\n    \"You successfully write all the factors of the two numbers.\",\n    \"Vous écrivez avec succès tous les facteurs des deux nombres.\"\n  ];\n\n  const lcmHint = [\n    \"把上行所有因數乘起來。\",\n    \"把上行所有因数乘起来。\",\n    \"Multiply all the factors above.\",\n    \"Multipliez tous les facteurs ci-dessus.\"\n  ];\n\n  const lcmCorrectText = [\n    \"做得好!你求得正確的L.C.M.。\",\n    \"做得好!你求得正确的L.C.M.。\",\n    \"Well done! You got the right L.C.M.。\",\n    \"Bien joué! Vous avez le bon L.C.M.。\"\n  ];\n\n  useEffect(() => {\n    setPrimeNumbers(getPrimeNumbers());\n    if (questions.length === 0) {\n      if (stageOrder === { stage: -1, order: 0 }) {\n        setInputIntegersArray([null, null]);\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      if (stageOrder === { stage: 0, order: 0 }) {\n        setQuestion(stageOrder.stage, stageOrder.order);\n      } else {\n        setStageOrder({ stage: 0, order: 0 });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setShowDivisionColomns(false);\n    setShowResult(false);\n    if (stageOrder.stage > -1) {\n      setQuestion(stageOrder.stage, stageOrder.order);\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }, [stageOrder]);\n\n  const handleStageClick = (stage) => {\n    setStageOrder({ stage: stage, order: 0 });\n  };\n\n  const setQuestion = (\n    stage,\n    order\n  ) => {\n    setInputIntegersArray(questions[stage][order])\n  };\n\n  useEffect(() => {\n    if (stageOrder.stage > -1 && inputIntegersArray[1] != null) {\n      okClick();\n    }\n  }, [inputIntegersArray])\n\n  function nextClick() {\n    if (stageOrder.stage > -1) {\n      if (\n        stageOrder.order <\n        questions[stageOrder.stage].length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage, order: stageOrder.order + 1 });\n      } else if (\n        stageOrder.stage <\n        questions.length - 1\n      ) {\n        setStageOrder({ stage: stageOrder.stage + 1, order: 0 });\n      } else {\n        setStageOrder({ stage: -1, order: 0 });\n      }\n    } else {\n      setInputIntegersArray([0, 0]);\n    }\n  }\n\n  const closeAlert = (e) => {\n    setOpenAlert(false);\n  };\n\n  const handleChange = (e, focusedIndex, index, inputsArray, setInputValue, groupType, clickable) => {\n    setOpenAlert(false);\n    if (focusedIndex == index || clickable) {\n      var tmpArray = [...inputsArray];\n      tmpArray[index] = parseInt(e.target.value);\n      setInputValue(tmpArray);\n      switch (groupType) {\n        case \"inputInteger\":\n          setShowDivisionColomns(false);\n          setShowResult(false);\n          break;\n        case \"commonFactor\":\n          checkAnswer(index, e.target.value, commonFactorsArray, setCommonArrayFocusedIndex, groupType);\n          break;\n        case \"lcm\":\n          checkAnswer(index, e.target.value, lcmResultArray, setLcmArrayFocusedIndex, groupType);\n          break;\n        case \"divisor\":\n          checkDivisor(index, e.target.value, firstQuotientsArray[index], secondQuotientsArray[index], setDivisorFocusedIndex);\n          break;\n        case \"firstQuotient\":\n          checkQuotient(index, e.target.value, divisorsArray, firstQuotientsArray, setDivisorsArray, setFirstQuotientsArray, setFirstQuotientFocusedIndex, secondQuotientsArray, setSecondQuotientsArray, setSecondQuotientFocusedIndex);\n          break;\n        case \"secondQuotient\":\n          checkQuotient(index, e.target.value, divisorsArray, secondQuotientsArray, setDivisorsArray, setSecondQuotientsArray, setSecondQuotientFocusedIndex, firstQuotientsArray, setFirstQuotientsArray, setFirstQuotientFocusedIndex);\n          break;\n      }\n    }\n  };\n\n  function checkDivisor(index, value, firstQuotient, secondQuotient, setAnswerFocusedIndex) {\n    //correct divisor\n    if (firstQuotient % value == 0 && secondQuotient % value == 0) {//} && value > 1 && value < quotient) {\n      if (primeNumbers.includes(parseInt(value))) {\n        setTimeout(() => {\n          setAnswerFocusedIndex(index + 1);\n          setOpenAlert(false);\n        }, 50);\n      } else {\n        //not a prime factor\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(mustBeAPrimeText[languageIndex]);\n        }\n      }\n    } else {\n      //not a factor\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        setErrorMessage(mustBeAFactorTextLeft[languageIndex] + firstQuotient + \",\" + secondQuotient + mustBeAFactorTextRight[languageIndex]);\n      }\n    }\n  }\n\n  function checkQuotient(index, value, divisorsArray, quotientsArray, setDivisorsArray, setQuotientsArray, setAnswerFocusedIndex, anotherQuotientsArray, setAnotherQuotientsArray, setAnotherQuotientFocusedIndex) {\n    if (divisorFocusedIndex == index) {\n      //correct quotient\n      setTimeout(() => {\n        setOpenAlert(false);\n      }, timeDelay);\n      if (value == quotientsArray[index - 1] / divisorsArray[index - 1] && divisorsArray[index - 1] != 1) {\n        if (numberOfQuotientCorrect == 0) {\n          setNumberOfQuotientCorrect(1);\n          setAnswerFocusedIndex(index + 1);\n        } else {\n          setTimeout(() => {\n            var tmpDivisorsArray = [...divisorsArray];\n            var tmpQuotientsArray = [...quotientsArray];\n            var tmpAnotherQuotientsArray = [...anotherQuotientsArray];\n            tmpQuotientsArray[index] = parseInt(value);\n            tmpDivisorsArray.push(null);\n            tmpQuotientsArray.push(null);\n            tmpAnotherQuotientsArray.push(null);\n            setDivisorsArray(tmpDivisorsArray);\n            setQuotientsArray(tmpQuotientsArray);\n            setAnotherQuotientsArray(tmpAnotherQuotientsArray);\n            setAnswerFocusedIndex(index + 1);\n            setAnotherQuotientFocusedIndex(index + 1);\n            setNumberOfQuotientCorrect(0);\n          }, 50);\n        }\n      } else {\n        //incorrect quotient\n        setOpenAlert(false);\n        if (value > 0) {\n          setTimeout(() => {\n            setOpenAlert(true);\n          }, timeDelay);\n          setSeverity(\"error\");\n          setErrorMessage(quotientsArray[index - 1] + \" ÷ \" + divisorsArray[index - 1] + \" = ?\");\n        }\n      }\n    }\n  }\n\n  function checkAnswer(index, value, factorsArray, setAnswerFocusedIndex, groupType, inputInteger) {\n    //correct factor\n    if (value == factorsArray[index]) {\n      if (groupType == \"lcm\") {\n        setErrorMessage(\"👍🏻\" + lcmCorrectText[languageIndex]);\n        setWholeCompleted(true);\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n      } else if (index == factorsArray.length - 1) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"success\");\n        setAnswerFocusedIndex(-1);\n        setErrorMessage(\"👍🏻\" + commonFactorsCorrectText[languageIndex]);\n      } else {\n        setAnswerFocusedIndex(index + 1);\n        setTimeout(() => {\n          setOpenAlert(false);\n        }, timeDelay);\n      }\n      //incorrect factor\n    } else {\n      setOpenAlert(false);\n      if (value > 0) {\n        setTimeout(() => {\n          setOpenAlert(true);\n        }, timeDelay);\n        setSeverity(\"error\");\n        if (groupType == \"lcm\") {\n          setErrorMessage(lcmHint[languageIndex]);\n        } else if (groupType == \"commonFactor\") {\n          setErrorMessage(commonFactorHint[languageIndex]);\n        }\n      }\n    }\n  }\n\n  const completeClick = (e, firstQuotient, secondQuotient) => {\n    if (inputIntegersArray[1] * firstQuotient == lcmResultArray[0] && inputIntegersArray[0] * secondQuotient == lcmResultArray[0]) {\n      setDivisionCompleted(true);\n      setErrorMessage(\"👍🏻\" + divisionCompletedText[languageIndex]);\n      setSeverity(\"success\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n      setShowResult(true);\n    } else {\n      setErrorMessage(divisionIncompleteHint[languageIndex]);\n      setSeverity(\"error\");\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    }\n  };\n\n  const okClick = (e) => {\n    if (inputIntegersArray[0] != parseInt(inputIntegersArray[0]) || inputIntegersArray[1] != parseInt(inputIntegersArray[1])) {\n      setErrorMessage(mustBeIntegerMessages[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] < 1 || inputIntegersArray[0] > 99 || inputIntegersArray[1] < 1 || inputIntegersArray[1] > 99) {\n      setErrorMessage(mustBeInRangeMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else if (inputIntegersArray[0] == inputIntegersArray[1]) {\n      setErrorMessage(mustBeDifferentMessage[languageIndex]);\n      setTimeout(() => {\n        setOpenAlert(true);\n      }, timeDelay);\n    } else {\n      setOpenAlert(false);\n      setShowDivisionColomns(false);\n      setTimeout(() => {\n        setShowDivisionColomns(true);\n      }, 200);\n      setDivisorsArray([null, null]);\n      setFirstQuotientsArray([inputIntegersArray[0], null]);\n      setSecondQuotientsArray([inputIntegersArray[1], null]);\n      setDivisorFocusedIndex(0);\n      setFirstQuotientFocusedIndex(1);\n      setSecondQuotientFocusedIndex(1);\n      setNumberOfQuotientCorrect(0);\n      setDivisionCompleted(false);\n      setShowResult(false);\n      setCommonArrayFocusedIndex(0);\n      setLcmInputArray([null]);\n      setLcmArrayFocusedIndex(0);\n      setWholeCompleted(false);\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[0], primeNumbers);\n      var factorsArray0 = factorsArray;\n      var { factorsArray, inputsArray } = calculateFactors(inputIntegersArray[1], primeNumbers);\n      var factorsArray1 = factorsArray;\n      var { factorsArray, inputsArray } = calculateResults(factorsArray0, factorsArray1);\n      var tmpHcf = 1;\n      var i;\n      for (i = 0; i < factorsArray.length; i++) {\n        tmpHcf *= factorsArray[i];\n      }\n      var tmpFactorsArray = factorsArray;\n      var tmpInputsArray = inputsArray;\n      if (factorsArray[0] == 1) {\n        tmpFactorsArray.pop();\n        tmpInputsArray.pop();\n      }\n      tmpFactorsArray.push(inputIntegersArray[0] / tmpHcf);\n      tmpFactorsArray.push(inputIntegersArray[1] / tmpHcf);\n      tmpInputsArray.push(null);\n      tmpInputsArray.push(null);\n      tmpFactorsArray.sort((a, b) => a - b);\n      setCommonFactorsArray(tmpFactorsArray);\n      setCommonInputsArray(tmpInputsArray);\n      var tmpLcm = inputIntegersArray[0] * inputIntegersArray[1] / tmpHcf;\n      setLcmResultArray([tmpLcm]);\n    }\n  };\n\n  const classes = pagesStyles();\n\n  return (\n    <MyFrame topic={topic} learningTool={learningTool}>\n      <Grid className={classes.spaceGrid} />\n      {questions.length > 0 && (\n        <StageButtons\n          stageText={stageText[languageIndex] + \"：\"}\n          stages={Object.keys(questions)}\n          handleStageClick={handleStageClick}\n          stageState={stageOrder.stage}\n          manual={manual[languageIndex]}\n        />\n      )}\n      <Grid className={classes.spaceGrid} />\n      <MyQuestion\n        questionTextLeft={questionTextLeft[languageIndex]}\n        setInputIntegersArray={setInputIntegersArray}\n        inputIntegerFocusedIndex={inputIntegerFocusedIndex}\n        inputIntegersArray={inputIntegersArray}\n        setInputIntegerFocusedIndex={setInputIntegerFocusedIndex}\n        handleChange={handleChange}\n        questionTextRight={questionTextRight[languageIndex]}\n        okClick={okClick}\n      />\n      <AlertSnackbar\n        open={openAlert}\n        closeAlert={closeAlert}\n        errorMessage={errorMessage}\n        severity={severity}\n      />\n      {\n        showDivisionColomns &&\n        <Grid className={classes.centerRow}>\n          <Grid className={classes.divisionColomn}>\n            <Grid className={classes.divisionInsideWideColumn}>\n              {\n                divisorsArray.map((divisor, index) => {\n                  return <Grid key={index} className={classes.divisionRow}>\n                    {\n                      ((index < divisorsArray.length - 2) || ((index == divisorsArray.length - 2) && !divisionCompleted)) &&\n                      <Box\n                        border={0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setDivisorsArray}\n                          focusedIndex={divisorFocusedIndex}\n                          inputsArray={divisorsArray}\n                          clickable={false}\n                          groupType=\"divisor\"\n                          handleChange={handleChange}\n                          highlighted={divisionCompleted}\n                        />\n                      </Box>\n                    }\n                    {\n                      ((index < divisorsArray.length - 1) || ((index == divisorsArray.length - 1) && !divisionCompleted)) &&\n                      <Box\n                        borderBottom={(index < divisorsArray.length - 2) || (index == divisorsArray.length - 2 && (!divisionCompleted) || index == 0) ? 2 : 0}\n                        borderLeft={(index < divisorsArray.length - 2) || (index == divisorsArray.length - 2 && (!divisionCompleted) || index == 0) ? 2 : 0}\n                      >\n                        <MyInput\n                          index={index}\n                          setInputValue={setFirstQuotientsArray}\n                          focusedIndex={firstQuotientFocusedIndex}\n                          inputsArray={firstQuotientsArray}\n                          clickable={false}\n                          groupType=\"firstQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == divisorsArray.length - 2) && divisionCompleted}\n                        />\n                        <MyInput\n                          index={index}\n                          setInputValue={setSecondQuotientsArray}\n                          focusedIndex={secondQuotientFocusedIndex}\n                          inputsArray={secondQuotientsArray}\n                          clickable={false}\n                          groupType=\"secondQuotient\"\n                          handleChange={handleChange}\n                          highlighted={(index == divisorsArray.length - 2) && divisionCompleted}\n                        />\n                      </Box>\n                    }\n                  </Grid>\n                })\n              }\n            </Grid>\n            <Grid className={classes.centerRow}>\n              <Typography className={classes.commonText}>\n                {quotientIsAPrimeQuestionLeft[languageIndex]}\n                {firstQuotientsArray[firstQuotientFocusedIndex - 1]},&nbsp;{secondQuotientsArray[secondQuotientFocusedIndex - 1]}\n                {quotientIsAPrimeQuestionRight[languageIndex]}\n              </Typography>\n              <Button\n                className={classes.completeButton}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={e => { completeClick(e, firstQuotientsArray[firstQuotientFocusedIndex - 1], secondQuotientsArray[secondQuotientFocusedIndex - 1]) }}\n              >\n                {completeButtonText[languageIndex]}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n      {\n        showResult && <Grid >\n          <Grid className={classes.centerRow}>\n            <Grid className={classes.factorsRows}>\n              <Paper >\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {commonFactorTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{commonFactorTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  {\n                    commonInputsArray.map((factor, index) => {\n                      return <Grid key={index} style={{ display: \"flex\" }}>\n                        {(index > 0) && <Typography className={classes.commonText}>×</Typography>}\n                        <MyInput\n                          index={index}\n                          setInputValue={setCommonInputsArray}\n                          focusedIndex={commonArrayFocusedIndex}\n                          inputsArray={commonInputsArray}\n                          clickable={false}\n                          groupType=\"commonFactor\"\n                          handleChange={handleChange}\n                        />\n                      </Grid>\n                    })\n                  }\n                </Grid>\n                <Grid container className={classes.factorsRows}>\n                  <Typography className={classes.commonText}>\n                    {questionTextLeft[languageIndex]}&nbsp;{inputIntegersArray[0]},&nbsp;{inputIntegersArray[1]}{questionTextRight[languageIndex]}&nbsp;:\n                  </Typography>\n                  <MyInput\n                    index={0}\n                    setInputValue={setLcmInputArray}\n                    focusedIndex={lcmArrayFocusedIndex}\n                    inputsArray={lcmInputArray}\n                    clickable={false}\n                    groupType=\"lcm\"\n                    handleChange={handleChange}\n                  />\n                  {\n                    wholeCompleted && <Button\n                      className={classes.okButton}\n                      variant=\"contained\"\n                      onClick={nextClick}\n                      color=\"primary\"\n                    ><ForwardRoundedIcon className={classes.resetArrow} /></Button>\n                  }\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </MyFrame>\n  );\n}\n","const constants = {\n   languages: [\"繁體中文\", \"简体中文\", \"English\", \"Française\"],\n   bibleVersions: [\"天主教\", \"基督教\", \"天主教\", \"基督教\", \"Catholic\", \"Christian\", \"Catholique\", \"Chrétienne\"],\n   bibleVersionsQuestion: [\"經文版本\", \"经文版本\", \"Scripture version\", \"Version biblique\"],\n   topics: [\n    \"H.C.F./G.C.F.(最大公因數)\", \"L.C.M.(最小公倍數)\",\n    \"H.C.F./G.C.F.(最大公因数)\", \"L.C.M.(最小公倍数)\",\n    \"H.C.F./G.C.F.(Highest/Greatest Common Factor)\", \"L.C.M.(Least Common Multiple)\",\n    \"H.C.F./G.C.F.(Facteur commun le plus élevé / le plus grand)\", \"L.C.M.(Multiple moins commun)\"\n  ],\n  topicsQuestion: [\"主題\", \"主题\", \"Topic\", \"Sujet\"],\n  learningTools: [\n    \"列舉法\", \"質因數分解法\", \"短除法\",//H.C.F.\n    \"列舉法\", \"質因數分解法\", \"短除法\",//L.C.M.\n    \"列举法\", \"质因数分解法\", \"短除法\",\n    \"列举法\", \"质因数分解法\", \"短除法\",\n    \"Factorization Method\", \"Prime Factorization Method\", \"Division Method\",\n    \"Multiplication Method\", \"Prime Factorization Method\", \"Division Method\",\n    \"Méthode de factorisation\", \"Méthode de factorisation principale\", \"Méthode de division\",\n    \"Méthode de multiplication\", \"Méthode de factorisation principale\", \"Méthode de division\"\n  ],\n  learningToolsQuestion: [\n    \"計算方法\", \"计算方法\", \"Calculation Method\", \"Méthode de calcul\"\n  ],\n  scriptureVerses: [\n    //traditional chinese\n    \"「有的落在好地裡，就長大成熟，結了果實，有的結三十倍，有的六十倍，有的一百倍。」谷4:8\",\n    \"「那撒在好地裡的，是指人聽了這「話」，就接受了，並結了果實，有的三十倍，有的六十倍，有的一百倍。」谷4:20\",\n    \"匝凱站起來對主說：「主，你看，我把我財物的一半施捨給窮人；我如果欺騙過誰，我就以四倍賠償。」路19:8\",\n    \"「又有的落在好土裏，就發芽長大，結出果實，有三十倍的，有六十倍的，有一百倍的。」可4:8\",\n    \"「那撒在好土裏的，就是人聽了道，領受了，並且結了果實，有三十倍的，有六十倍的，有一百倍的。」可4:20\",\n    \"撒該站著對主說：「主啊，我把所有的一半給窮人；我若勒索了誰，就還他四倍。」路19:8\",\n    //simplified chinese\n    \"「有的落在好地里，就长大成熟，结了果实，有的结三十倍，有的六十倍，有的一百倍。」谷4:8\",\n    \"「那撒在好地里的，是指人听了这「话」，就接受了，并结了果实，有的三十倍，有的六十倍，有的一百倍。 」谷4:20\",\n    \"匝凯站起来对主说：「主，你看，我把我财物的一半施舍给穷人；我如果欺骗过谁，我就以四倍赔偿。」路19:8\",\n    \"「又有的落在好土里，就发芽长大，结出果实，有三十倍的，有六十倍的，有一百倍的。」可4:8\",\n    \"「那撒在好土里的，就是人听了道，领受了，并且结了果实，有三十倍的，有六十倍的，有一百倍的。」可4:20\",\n    \"撒该站着对主说：「主啊，我把所有的一半给穷人；我若勒索了谁，就还他四倍。」路19:8\",\n    //english\n    \"'And some seeds fell into rich soil, grew tall and strong, and produced a good crop; the yield was thirty, sixty, even a hundredfold.'Mark4:8\",\n    \"'And there are those who have been sown in rich soil; they hear the word and accept it and yield a harvest, thirty and sixty and a hundredfold.'Mark4:20\",\n    \"But Zacchaeus stood his ground and said to the Lord, 'Look, sir, I am going to give half my property to the poor, and if I have cheated anybody I will pay him back four times the amount.'Luke19:8\",\n    \"'And some, falling on good earth, gave fruit, coming up and increasing, and giving thirty, sixty, and a hundred times as much.'Mark4:8\",\n    \"'And these are they who were planted on the good earth; such as give ear to the word, and take it into their hearts, and give fruit, thirty and sixty and a hundred times as much.'Mark4:20\",\n    \"And Zacchaeus, waiting before him, said to the Lord, See, Lord, half of my goods I give to the poor, and if I have taken anything from anyone wrongly, I give him back four times as much.Luke19:8\",\n    //french\n    \"'Et d'autres tombèrent dans la bonne terre, montèrent et crûrent, donnèrent du fruit et rapportèrent l'un trente, un autre soixante, un autre cent.'Marc4:8\",\n    \"'Et d'autres sont ceux qui ont été semés dans la bonne terre : ils entendent la parole et la reçoivent, et ils portent du fruit, trente, soixante, cent (pour un).'Marc4:20\",\n    \"Or Zachée, s'étant arrêté, dit au Seigneur: ' Voici, Seigneur, je donne aux pauvres la moitié de mes biens; et si j'ai fait du tort à quelqu'un, je rends le quadruple.'Luc19:8\",\n    \"« Une autre partie tomba dans la bonne terre ; elle donna du fruit qui montait et se développait, avec un rapport de 30, 60 ou 100 pour 1 »'Marc4:8\",\n    \"« D'autres enfin reçoivent la semence dans la bonne terre : ce sont ceux qui entendent la parole, l’accueillent et portent du fruit, avec un rapport de 30, 60 ou 100 pour 1. »Marc4:20\",\n    \"Mais Zachée, se tenant devant le Seigneur, lui dit : « Seigneur, je donne aux pauvres la moitié de mes biens et, si j'ai causé du tort à quelqu'un, je lui rends le quadruple. »Luc19:8\"\n  ],\n  prayers: [\n    \"主耶穌，感謝祢賜我恩竉，幫助我在生命中結出永遠的果實﹗\",\n    \"主耶稣，感谢祢赐我恩竉，帮助我在生命中结出永远的果实﹗\",\n    \"Lord Jesus, thank you for giving me grace and helping me bear eternal fruit in my life!\",\n    \"Seigneur Jésus, merci de me donner la grâce et de m'aider à porter le fruit éternel dans ma vie!\"\n  ],\n   noticificationText: [\n    \"開啟通知，計算過程會顯示提示。\",\n    \"开启通知，计算过程会显示提示。\",\n    \"Turn on the notification, prompts will be displayed during the calculation.\",\n    \"Activez la notification, des invites seront affichées pendant le calcul.\"\n  ],\n  applicationHint: [\n    \"使用方法：先按空格，再輸入數字。\",\n    \"使用方法：先按空格，再输入数字。\",\n    \"How to use: Press the space first, then enter a number.\",\n    \"Comment utiliser: appuyez d'abord sur l'espace, puis entrez un nombre.\"\n  ],\n};\n\nexport default constants;\n","export default __webpack_public_path__ + \"static/media/cross1.efdb80d0.png\";","export default __webpack_public_path__ + \"static/media/cross2.f3b7448e.jpg\";","export default __webpack_public_path__ + \"static/media/zacchaeus1.d5c72a13.jpg\";","export default __webpack_public_path__ + \"static/media/prayer1.6e15678e.jpg\";","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  HeadingSelect,\n} from \"../components/MathsLearningComponents\";\nimport {\n  HCFFactorization,\n} from \"./HCFFactorization\";\nimport {\n  LCMMultiplication,\n} from \"./LCMMultiplication\";\nimport {\n  HCFPrimeFactorization,\n} from \"./HCFPrimeFactorization\";\nimport {\n  LCMPrimeFactorization,\n} from \"./LCMPrimeFactorization\";\nimport {\n  HCFDivision,\n} from \"./HCFDivision\";\nimport {\n  LCMDivision,\n} from \"./LCMDivision\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { theme as myTheme } from \"../themes/theme\";\nimport constants from \"../constants/MathsLearningConstants\";\nimport pic1 from \"../assets/cross1.png\";\nimport pic2 from \"../assets/cross2.jpg\";\nimport pic3 from \"../assets/zacchaeus1.jpg\";\nimport prayerImage from \"../assets/prayer1.jpg\";\n\nconst mathsLearningStyle = (theme) => ({\n  mathsLearningContainer: {\n    margin: \"1vw\",\n    minHeight: \"97vh\",\n    backgroundImage: myTheme.color.skyGradient,\n  },\n  headingContainer: {\n    direction: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  scriptureVerseRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  scriptureVerseBorder: {\n    direction: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"80vw\",\n    borderWidth: \"0.5vw\",\n    borderImage: myTheme.color.conicGradient,\n    border: \"solid\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"95vw\",\n    },\n  },\n  scriptureImage: {\n    height: \"8vw\",\n    padding: \"0.5vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"20vw\",\n    },\n  },\n  scriptureVerse: {\n    width: \"70vw\",\n    fontSize: \"2vw\",\n    color: myTheme.color.myGreen,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"90vw\",\n      fontSize: \"4vw\",\n    },\n  },\n  prayerRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  prayerImage: {\n    height: \"6vw\",\n    padding: \"0.5vw\",\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"12vw\",\n    },\n  },\n  prayerText: {\n    width: \"65vw\",\n    fontSize: \"2vw\",\n    color: myTheme.color.myGreen,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"80vw\",\n      fontSize: \"4vw\",\n    },\n  },\n  emailText: {\n    width: \"92vw\",\n    textAlign: \"right\",\n    fontSize: \"1.5vw\",\n    color: myTheme.color.myBrown,\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"3vw\",\n    },\n  },\n  commonText: {\n    fontSize: \"1.4vw\",\n    textAlign: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"2.8vw\",\n    },\n  },\n});\n\nfunction MathsLearning(props) {\n  const [languageIndex, setLanguageIndex] = useState(2);//0:繁體中文\n  const [bibleVersionIndex, setBibleVersionIndex] = useState(0);//0:catholic,1:christian\n  const [topicIndex, setTopicIndex] = useState(0);\n  const [learningToolIndex, setLearningToolIndex] = useState(0);\n  const [scriptureVerseIndex, setScriptureVerseIndex] = useState(0);\n\n  const numberOfBibleVersions = 2;\n  const numberOfTopics = 2;\n  const numberOfLearningTools = 3;\n  const numberOfScriptureVerses = 3;\n  const scriptureImages = [pic1, pic2, pic3];\n\n  const {\n    languages,\n    bibleVersions,\n    bibleVersionsQuestion,\n    topics,\n    topicsQuestion,\n    learningTools,\n    learningToolsQuestion,\n    scriptureVerses,\n    prayers,\n    noticificationText,\n    applicationHint,\n  } = constants;\n  \n  useEffect(() => {\n    const queryString = props.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    if (urlParams.get(\"lang\") != null && urlParams.get(\"lang\") != \"\" && urlParams.get(\"lang\") >= 0 && urlParams.get(\"lang\") < 4) {\n      setLanguageIndex(parseInt(urlParams.get(\"lang\")));\n    } \n    if (urlParams.get(\"ver\") != null && urlParams.get(\"ver\") != \"\" && urlParams.get(\"ver\") >= 0 && urlParams.get(\"ver\") < numberOfBibleVersions) {\n      setBibleVersionIndex(parseInt(urlParams.get(\"ver\")));\n    }\n    setScriptureVerseIndex(Math.floor(Math.random() * numberOfScriptureVerses));\n  }, []);\n\n  const renderSwitch = () => {\n    switch (topicIndex) {\n      case 0: {\n        switch (learningToolIndex) {\n          case 0:\n            return <HCFFactorization\n              languageIndex={languageIndex}\n              topic={topics[languageIndex * numberOfTopics + topicIndex]}\n              learningTool={learningTools[(languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools + learningToolIndex]}\n            />\n          case 1:\n            return <HCFPrimeFactorization\n              languageIndex={languageIndex}\n              topic={topics[languageIndex * numberOfTopics + topicIndex]}\n              learningTool={learningTools[(languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools + learningToolIndex]}\n            />\n          case 2:\n            return <HCFDivision\n              languageIndex={languageIndex}\n              topic={topics[languageIndex * numberOfTopics + topicIndex]}\n              learningTool={learningTools[(languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools + learningToolIndex]}\n            />\n        };\n      };\n      case 1: {\n        switch (learningToolIndex) {\n          case 0:\n            return <LCMMultiplication\n              languageIndex={languageIndex}\n              topic={topics[languageIndex * numberOfTopics + topicIndex]}\n              learningTool={learningTools[(languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools + learningToolIndex]}\n            />\n          case 1:\n            return <LCMPrimeFactorization\n              languageIndex={languageIndex}\n              topic={topics[languageIndex * numberOfTopics + topicIndex]}\n              learningTool={learningTools[(languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools + learningToolIndex]}\n            />\n          case 2:\n            return <LCMDivision\n              languageIndex={languageIndex}\n              topic={topics[languageIndex * numberOfTopics + topicIndex]}\n              learningTool={learningTools[(languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools + learningToolIndex]}\n            />\n        };\n      };\n    };\n  };\n\n  const { classes } = props;\n\n  return (\n    <Grid className={classes.mathsLearningContainer} spacing={0}>\n      <Grid container className={classes.headingContainer}>\n        <HeadingSelect\n          selectLabel=\"Language\"\n          selectIndex={languageIndex}\n          setItemIndex={setLanguageIndex}\n          itemsArray={languages}\n        />\n        <HeadingSelect\n          selectLabel={bibleVersionsQuestion[languageIndex]}\n          selectIndex={bibleVersionIndex}\n          setItemIndex={setBibleVersionIndex}\n          itemsArray={bibleVersions.slice(languageIndex * numberOfBibleVersions, languageIndex * numberOfBibleVersions + numberOfBibleVersions)}\n        />\n        <HeadingSelect\n          selectLabel={topicsQuestion[languageIndex]}\n          selectIndex={topicIndex}\n          setItemIndex={setTopicIndex}\n          itemsArray={topics.slice(languageIndex * numberOfTopics, languageIndex * numberOfTopics + numberOfTopics)}\n        />\n        <HeadingSelect\n          selectLabel={learningToolsQuestion[languageIndex]}\n          selectIndex={learningToolIndex}\n          setItemIndex={setLearningToolIndex}\n          itemsArray={learningTools.slice((languageIndex * numberOfTopics + topicIndex) * numberOfLearningTools, (languageIndex * numberOfTopics + topicIndex + 1) * numberOfLearningTools)}\n        />\n      </Grid>\n      <Grid className={classes.scriptureVerseRow} >\n        <Grid className={classes.scriptureVerseBorder} border={1}>\n          <img className={classes.scriptureImage} src={scriptureImages[scriptureVerseIndex]} />\n          <Typography className={classes.scriptureVerse}>{scriptureVerses[(languageIndex * numberOfBibleVersions + bibleVersionIndex) * numberOfScriptureVerses + scriptureVerseIndex]}</Typography>\n        </Grid>\n      </Grid>\n      {\n        renderSwitch()\n      }\n      <Grid className={classes.prayerRow}>\n        <img className={classes.prayerImage} src={prayerImage} />\n        <Typography className={classes.prayerText}>{prayers[languageIndex]}</Typography>\n      </Grid>\n      <Grid className={classes.prayerRow}>\n        <Typography className={classes.commonText}>{applicationHint[languageIndex]}</Typography>\n      </Grid>\n      <Grid className={classes.prayerRow}>\n        <Typography className={classes.commonText}>{noticificationText[languageIndex]}</Typography>\n      </Grid>\n      <Grid className={classes.emailRow}>\n        <Typography className={classes.emailText}>samsoncsyuapple@gmail.com</Typography>\n      </Grid>\n    </Grid>\n  );\n\n}\n\nexport default withStyles(mathsLearningStyle)(MathsLearning);","import React from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { theme } from \"./themes/theme\";\nimport MathsLearning from \"./pages/MathsLearning\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Route path=\"/\" component={MathsLearning} />\n      </BrowserRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}